[
  {
    "objectID": "seminar-1.html",
    "href": "seminar-1.html",
    "title": "Power Calculations and Simulations",
    "section": "",
    "text": "library(tidyverse)\nlibrary(modelsummary)\nlibrary(tinytable)\nlibrary(psych)\n\n\n\n\nIn this seminar you will learn how to:\n\nmake an a priori power calculation for an experiment;\nsimulate an experiment in R/Stata;\nand visualize the properties of the power function.\n\n\n\n\nStatistical power is an valuable theoretical and practical concept. The power of a test is the probability of rejecting the null hypothesis when the alternative hypothesis is true.\nLet’s consider the simple null hypothesis of no average treatment effect,1\n\\[\n  H_0: \\tau_{ATE} = 0\n\\]\nWhen testing this null hypothesis against the alternative,\n\\[\nH_1: \\tau_{ATE} \\neq 0\n\\]\nthe set of values that fulfill the alternative hypothesis is any value on the real line, excluding 0.\nThe power of this test is,\n\\[\n  Pr\\big(\\text{Reject }H_0|H_1\\text{ is true}\\big) = Pr\\big(\\text{Reject }H_0|\\tau_{ATE} = \\tau_0; \\tau_0\\neq 0\\big)\n\\]\nWhen do we reject \\(H_0\\)? A valid test is defined by a rejection rule based on a test static and a corresponding critical value. For example, in this two-sided test,\n\\[\n\\text{Reject }H_0\\text{ if}\\qquad \\bigg| \\frac{\\hat{\\tau}}{se(\\hat{\\tau})}\\bigg|&gt;z_{1-\\alpha/2}\n\\]\nIn statistical inference there is a trade off between Type I and II errors. We limit Type I erros - probability of rejecting \\(H_0\\) when \\(H_0\\) is true - through the choice of \\(\\alpha\\): the significance level. In Economics, this is typically chosen to be 1%, 5%, or 10%.\n\\[\n\\alpha = Pr\\big(\\text{Reject }H_0|H_0\\text{ is true}\\big)\n\\] A test is said to be of size \\(\\alpha\\) if the probability of a Type I error is \\(\\leq \\alpha\\).\nThe finite sample distribution of this test statistic is not known as we do not know the distributions of \\(\\{Y(1),Y(0)\\}\\) upon which the test statistic is based.2 By the Central Limit Theorem, we know that the limiting distribution is standard normal under the null hypothesis. This is true only under \\(H_0\\). The CLT holds for the true mean of estimator (\\(E[\\hat{\\tau}]=\\tau_{ATE}\\)), which we know under \\(H_0\\) to be \\(0\\).\nThus, under \\(H_0\\),\n\\[\n\\frac{\\hat{\\tau}}{se(\\hat{\\tau})} = \\frac{\\hat{\\tau}-E[\\hat{\\tau}]}{se(\\hat{\\tau})} \\overset{d}\\longrightarrow N(0,1) \\quad \\text{as }n\\rightarrow \\infty\n\\] For this reason, we can approximate the distribution of the test statistic with the standard normal.\n\\[\n\\frac{\\hat{\\tau}}{se(\\hat{\\tau})} \\quad a.\\thicksim N(0,1) \\quad \\text{under }H_0\n\\]\n\nExercise 1 Can you show that the size of this test is \\(\\alpha\\) (as \\(n\\rightarrow \\infty\\))?\n\nUnfortunatley, we cannot restrict the probability of both a Type I and II error. Here, we chose the critical values to give us a test of size \\(\\alpha\\). By doing so, we give up the possibility of limiting the probability of a Type II error. Moreover, a smaller \\(\\alpha\\) will necessarily imply a higher probability of Type II error.3\nThe probability of a Type II error depends on the power of the test.\n\\[\nPr\\big(\\text{Failing to reject }H_0|H_0\\text{ is false}\\big) = 1 - Pr\\big(\\text{Reject }H_0|H_1\\text{ is true}\\big)\n\\]\nA more powerful test has a lower probability of Type II error. Since, two tests might have the same size (i.e., \\(\\alpha\\)) we strictly prefer the more powerful test. Power is therefore an important metric by which we can compare different tests.\nFor this test (\\(H_0: \\tau_{ATE}=0\\)), the power of the test tells you how likely you are to detect a given non-zero average treatment effect in the experiment. Given how expensive it is to implement experiments (especially in Economics), this is useful information. There would be no point running a RCT if the likelihood of rejecting a null effect is very low.\n\n\n\nIn this setting, the power function tells you the probability of rejecting \\(H_0\\) for any true value of the ATE; denoted here by the scalar \\(\\tau_0\\). For the above two-sided test, this is given by,\n\\[\n\\begin{aligned}\n        \\theta(\\tau_0)=&Pr(\\text{Reject }H_0|\\tau_{ATE}=\\tau_0) \\\\\n        =& Pr\\left(\\bigg|\\frac{\\hat{\\tau}}{se(\\hat{\\tau})}\\bigg|&gt;z_{1-\\alpha/2}\\bigg|\\tau_{ATE}=\\tau_0\\right) \\\\\n        =&Pr\\left(\\frac{\\hat{\\tau}}{se(\\hat{\\tau})}&lt;z_{\\alpha/2}\\bigg|\\tau_{ATE}=\\tau_0\\right)+Pr\\left(\\frac{\\hat{\\tau}}{se(\\hat{\\tau})}&gt;z_{1-\\alpha/2}\\bigg|\\tau_{ATE}=\\tau_0\\right) \\\\\n        =&Pr\\left(\\frac{\\hat{\\tau}-\\tau_0}{se(\\hat{\\tau})}+\\frac{\\tau_0}{se(\\hat{\\tau})}&lt;z_{\\alpha/2}\\bigg|\\tau_{ATE}=\\tau_0\\right)+Pr\\left(\\frac{\\hat{\\tau}-\\tau_0}{se(\\hat{\\tau})}+\\frac{\\tau_0}{se(\\hat{\\tau})}&gt;z_{1-\\alpha/2}\\bigg|\\tau_{ATE}=\\tau_0\\right) \\\\\n        \\approx& Pr\\left(Z&lt;z_{\\alpha/2}-\\frac{\\tau_0}{se(\\hat{\\tau})}\\bigg|\\tau_{ATE}=\\tau_0\\right)+Pr\\left(Z&gt;z_{1-\\alpha/2}-\\frac{\\tau_0}{se(\\hat{\\tau})}\\bigg|\\tau_{ATE}=\\tau_0\\right)\n    \\end{aligned}\n\\]\nwhere \\(Z\\) is a standard normal random variable. The final equality is an approximation since we do not know the finite sample distribution of the test statistic.\n\nExercise 2 Given the above definition of the power function, what is \\(\\theta(0)\\)?\n\nTo make further use of this function, we need to define \\(\\hat{\\tau}\\) and \\(se(\\hat{\\tau})\\). Consider,\n\\[\n\\begin{aligned}\n  \\hat{\\tau} =& \\frac{1}{N_t} \\sum_{i:W_i=1}Y_i-\\frac{1}{N_c} \\sum_{i:W_i=0}Y_i \\\\\n  se(\\hat{\\tau}) =& \\sqrt{V^{cons}} \\\\\n  =&\\sqrt{S^2\\left(\\frac{1}{N_t}+\\frac{1}{N_c}\\right)}\n\\end{aligned}\n\\]\nHere we are using the constant-variance finite sample estimator. One cannot use the Neyman estimator without prior knowledge the variance of \\(Y(1)\\), the potential outcome with treatment. For this reason, it is less useful in power calculations made prior to the experiment.4\n\nExercise 3 A researcher has a sample of 650 individuals: \\(N_t = 270\\) and \\(N_c = 380\\). Using the above formulae, calculate the power of the experiment to detect a treatment effect equal to 15% of a standard deviation of the outcome variable.\n\n\nExercise 4 A researcher needs to show that their test has 80% power for a treatment effect of 20% of a standard deviation of the outcome. Using the above formulae, compute the sample size needed to achieve this level of power when assignment into treatment is equal. Then compute the required sample size if only a third of the sample is treated.\n\n\nExercise 5 How could you improve the power of an experiment?\n\n\n\n\nIn this section we will simulate an experiment and plot the power function of the OLS estimator from a simple linear regression model.5 We will also examine the impact of adding good controls (covariates) to the estimated model.\n\n\nWe begin by constructing a vector of potential outcomes, \\(\\{Y(0),Y(1)\\}\\), based on a known data generating process (DGP) and treatment effect. We will assign values to \\(Y(0)\\) based on the following linear DGP,\n\\[\n        Y_i(0) = \\alpha + X_i'\\gamma + \\varepsilon_i\n\\]\nwhere,\n\n\\(Y_i(0)\\) is the potential outcome without treatment and is measured after treatment has taken place. In this exercise we assume that the outcome is the log of wages.\n\\(X_i\\) is a vector of covariates that explain some of the variation in \\(Y_i(0)\\). In this instance, we will treat it as a linear term in age and gender dummy.\nThe error term will be drawn from a distribution of our choosing.\n\nFor this exercise, the relevant parameters \\(\\{\\alpha,\\gamma',\\sigma_{\\varepsilon}\\}\\) have been chosen to match a linear model of log wages against a dummy variable for gender and linear term in age, using data from the 2017 US CPS.\nWe can then generate the observed outcome as,\n\\[\n    Y_i = Y_i(0) + \\tau W_i\n\\]\nwhere \\(W_i\\) is an indicator function denoting treatment status in a completely randomized experiment with equal allocation to treatment and control. We will specify the homogeneous treatment to be \\(\\tau = 2\\%\\).6\n\n\n\nStart by setting a seed. This ensures that all random number generators in this programme are replicable.\n\nset.seed(12956)\n\nGenerate an empty dataframe with 200 observations.\n\ndata1 &lt;- data.frame(matrix(ncol = 0, nrow = 200))\n\nDefine the parameters of the simulation.\n\nalpha &lt;- 0.07\ngamma_f &lt;- -0.17\ngamma_a &lt;- 0.08\ntau &lt;- 0.02\n\nAfter having selected each parameter we need to draw values of each explanatory variable, including the error term, in order to calculate the value of the potential outcomes. In this instance we will make use of known distributions.\nThe error term will be drawn from a normal distribution \\(N(0,0.55)\\). Gender will be drawn from a binonmial distribution while age will be a sequence of integers assigned based on a uniform distribution. As each variable is drawn independently, the covariance of the two variables should be zero. However, the covariance in the realized sample will be non-zero.\n\ndata1$female &lt;- rbinom(200,1,0.5)\ndata1$age &lt;- floor(46*runif(200) + 20)\ndata1$error &lt;- rnorm(200,0,0.55)\n\nGenerate Y(0)\n\ndata1$Y0 &lt;- alpha + gamma_f*data1$female + gamma_a*data1$age + data1$error\n\nTo control the number of observations assigned to treatment and control we will not use the binomial distribution command. Instead we will use a uniformly distributed number to sort and then group the data. Note, there are many way to do this assignment.\nWe can then apply the treatment and generate the observable outcome variable.\n\ndata1$temp &lt;- runif(200)\ndata1$treat &lt;- ifelse(data1$temp&gt;=median(data1$temp),1,0)\ntable(data1$treat)\n\n\n  0   1 \n100 100 \n\n\nGenerate the observable outcome variable\n\ndata1$Yobs &lt;- data1$Y0 + tau*data1$treat\n\nWe can now estimate the treatment effect using a linear regression model, with and without the additional covariates.\n\nreg1 &lt;- lm(Yobs ~ treat, data=data1)\nreg2 &lt;- lm(Yobs ~ treat + female + age, data=data1)\nmodelsummary(list(\"(1)\"=reg1,\"(2)\"=reg2), stars=c('*'=.1, '**'=.05,'***'=.01), gof_map = c(\"nobs\", \"r.squared\", \"rmse\"))\n\n \n\n  \n    \n    \n    tinytable_6pi48zj88msnj88p7u2w\n    \n    \n    \n    \n  \n\n  \n    \n      \n        \n        \n              \n                 \n                (1)\n                (2)\n              \n        \n        * p &lt; 0.1, ** p &lt; 0.05, *** p &lt; 0.01\n        \n                \n                  (Intercept)\n                  3.397***\n                  0.094   \n                \n                \n                             \n                  (0.120) \n                  (0.146) \n                \n                \n                  treat      \n                  -0.018  \n                  -0.003  \n                \n                \n                             \n                  (0.170) \n                  (0.082) \n                \n                \n                  female     \n                          \n                  -0.182**\n                \n                \n                             \n                          \n                  (0.083) \n                \n                \n                  age        \n                          \n                  0.079***\n                \n                \n                             \n                          \n                  (0.003) \n                \n                \n                  Num.Obs.   \n                  200     \n                  200     \n                \n                \n                  R2         \n                  0.000   \n                  0.770   \n                \n                \n                  RMSE       \n                  1.20    \n                  0.57    \n                \n        \n      \n    \n\n    \n\n  \n\n\n\n\nWhy are the two estimates of \\(\\tau\\) - \\(\\hat{\\beta}_1^{OLS}\\) and \\(\\hat{\\beta}_2^{OLS}\\) - not equal to 0.02? The OLS estimator is a random variable that has a distribution. The unconfoundedness of the treatment assignment and the homogeneous treatment effects mean that in expectation these estimators are unbiased and equal to 0.02. However, a particular realization may not be. In fact, the probability that \\(\\hat{\\beta}^{OLS}=\\tau_{ATE}=0.2\\) is 0.\n\n\n\nTo examine this characteristic of both estimators we will repeat the above process R-times. This will allow us to observe the overall distribution of the estimator. To do so we will write a short program that executes the same process R-times. The programme stores value of the estimator in a matrix.\n\nmat1 &lt;- replicate(1000, {\n  df&lt;-data.frame(matrix(ncol = 0, nrow = 200));\n  df$female &lt;- rbinom(200,1,0.5);\n  df$age &lt;- floor(46*runif(200) + 20);\n  df$error &lt;- rnorm(200,0,0.55);\n  df$Y0 &lt;- alpha + gamma_f*df$female + gamma_a*df$age + df$error;\n  df$temp &lt;- runif(200);\n  df$treat &lt;- ifelse(df$temp&gt;=median(df$temp),1,0);\n  df$Yobs &lt;- df$Y0 + tau*df$treat;\n  lm1 &lt;- lm(Yobs ~ treat, data=df);\n  lm2 &lt;- lm(Yobs ~ treat + female + age, data=df);\n  coef &lt;- c(lm1$coefficients[2],lm2$coefficients[2])\n}, simplify = \"array\")\nmat2 &lt;-t(mat1)\ncolnames(mat2)&lt;-c(\"beta1\",\"beta2\")\nsummary(mat2)\n\n     beta1              beta2         \n Min.   :-0.50429   Min.   :-0.22257  \n 1st Qu.:-0.09083   1st Qu.:-0.03110  \n Median : 0.02168   Median : 0.01811  \n Mean   : 0.01898   Mean   : 0.02053  \n 3rd Qu.: 0.12914   3rd Qu.: 0.07469  \n Max.   : 0.52228   Max.   : 0.28544  \n\ndescribe(mat2)\n\n      vars    n mean   sd median trimmed  mad   min  max range  skew kurtosis\nbeta1    1 1000 0.02 0.17   0.02    0.02 0.16 -0.50 0.52  1.03 -0.07     0.06\nbeta2    2 1000 0.02 0.08   0.02    0.02 0.08 -0.22 0.29  0.51 -0.02    -0.01\n        se\nbeta1 0.01\nbeta2 0.00\n\n\nHaving repeated the process 1000 times we can now examine the characteristics of each estimator, first by summarizing the stored values and then graphically. First, using a histogram:\n\nggplot(as.data.frame(mat2), aes(x=beta1)) +\n  geom_histogram(colour=\"black\", fill=\"lightgrey\") +\n  geom_vline(aes(xintercept=mean(beta1)),\n            color=\"red\", linetype=\"dashed\", size=1)\n\n\n\n\n\n\n\nggplot(as.data.frame(mat2), aes(x=beta2)) +\n  geom_histogram(colour=\"black\", fill=\"lightgrey\") +\n  geom_vline(aes(xintercept=mean(beta2)),\n            color=\"red\", linetype=\"dashed\", size=1)\n\n\n\n\n\n\n\n\nSecond, using a kernel density function, which generates a smoothed estimate of the density function.\n\nggplot(as.data.frame(mat2), aes(x=beta1)) +\n  geom_density(aes(x=beta1,color=\"Beta1\")) +\n  geom_density(aes(x=beta2,color=\"Beta2\"),linetype=\"dashed\") +\n  geom_vline(aes(xintercept=0.02,color=\"tau=0.02\")) +\n  scale_color_manual(\"\",\n                     breaks=c(\"Beta1\",\"Beta2\",\"tau=0.02\"),\n                     values=c(\"Beta1\"=\"red\", \"Beta2\"=\"blue\",\"tau=0.02\"=\"darkgreen\")) +\n  xlab(\"beta/tau\") +\n  labs(title=\"kernel density plot\")\n\n\n\n\n\n\n\n\nThe distribution of both estimators is remarkably . This is by design. The distribution of \\(\\hat{\\beta}\\) is dependent on the distribution of the error term. In this instance, that is a normal distribution because of the DGP we specified.\n\n\n\nTo compute the power function we need to know the variance of each of our two OLS estimators. Given that the variance of the estimator is in fact known, we could include this directly. Alternatively, we could estimate the variance of the each estimator using the distribution from the simulation.\nLet us see how close the simulation variance is to the true DGP variance. From the DGP, we know that\n\\[\n\\begin{aligned}\n    Var(\\hat{\\beta}^{OLS}_1) &= \\frac{\\gamma_f^2Var(female_i)+\\gamma_a^2Var(age_i)+\\sigma_{\\varepsilon}^2}{N(\\bar{W}-\\bar{W}^2)} \\\\\n    Var(\\hat{\\beta}^{OLS}_2) &= \\frac{\\sigma_{\\varepsilon}^2}{N(\\bar{W}-\\bar{W}^2)}\n\\end{aligned}\n\\] where, \\[\n    \\begin{aligned}\n    Var(female_i) &= 0.5(1-0.5) \\\\\n    Var(age_i) &= \\frac{1}{12}(65-20)^2\n\\end{aligned}\n\\]\nCalculate standard error for each estimator based on known distributions.\n\nse1 &lt;- sqrt((gamma_f^2*(0.5-0.5^2) + gamma_a^2*1/12*(65-20)^2 + 0.55^2)/(200*(0.5-0.5^2)))\nse2 &lt;- sqrt((0.55^2)/(200*(0.5-0.5^2)))\nse1\n\n[1] 0.1667168\n\nse2\n\n[1] 0.07778175\n\n\nApproximate the standard error using the standard deviation of the simulations.\n\nsd1 &lt;- sd(as.data.frame(mat2)$beta1)\nsd1\n\n[1] 0.168046\n\nsd2 &lt;- sd(as.data.frame(mat2)$beta2)\nsd2\n\n[1] 0.07764108\n\n\nFor now we will proceed to calculate the power function using the known DGP variance. To do so we will first construct a grid of alternative values of \\(beta\\). Next, we will estimate the power for each true value of \\(beta\\); i.e. each value in the grid. Finally, we will plot the two power functions alongside one another.\nConstruct grid of alternative values of \\(\\tau_0\\), centered around \\(\\tau_0\\)=0.02. This should include \\(\\tau_0=0\\), the null hypothesis.\n\ndata1$tau0[1]&lt;- -0.1 + tau\nfor (i in 2:200) {\n  data1$tau0[i] &lt;- data1$tau0[i-1] + 0.001\n}\n\nCalculate power at each value of \\(\\tau_0\\).\n\ndata1$theta1 &lt;- pnorm(qnorm(0.025)-data1$tau0/se1) + 1-pnorm(qnorm(0.975)-data1$tau0/se1)\ndata1$theta2 &lt;- pnorm(qnorm(0.025)-data1$tau0/se2) + 1-pnorm(qnorm(0.975)-data1$tau0/se2)\n\nPlot power curves\n\nggplot(data1, aes(x=tau0,y=theta1)) +\n  geom_line(aes(y=theta1,color=\"Beta1\")) +\n  geom_line(aes(y=theta2,color=\"Beta2\"),linetype=\"dashed\") +\n  geom_vline(aes(xintercept=0,color=\"H0\")) +\n  geom_vline(aes(xintercept=0.02,color=\"tau=0.02\")) +\n  geom_hline(aes(yintercept=0.05,color=\"a=0.05\")) +\n  scale_color_manual(\"\",\n                     breaks=c(\"Beta1\",\"Beta2\",\"H0\",\"tau=0.02\",\"a=0.05\"),\n                     values=c(\"Beta1\"=\"red\", \"Beta2\"=\"blue\",\"H0\"=\"black\",\n                              \"tau=0.02\"=\"darkgreen\",\"a=0.05\"=\"darkgrey\")) +\n  xlab(\"beta/tau\") +\n  ylab(\"power\") +\n  labs(title=\"power curves\")\n\n\n\n\n\n\n\n\nIt is clear from the displayed power functions that the second estimator is universally more powerful. The lower variance of this estimators translates directly into a higher probability of rejecting the null hypothesis of no-effect for all non-zero values of the true hypothesis. It is for this reason that we strongly prefer the second estimator and do not simply estimate a model of outcome on treatment.\nIn this instance, there is relatively little power to reject the null at the true value. Can you calculate the power at \\(\\tau_0=0.02\\)?\n\n\n\nWe have explored the value of including covariates, but what about increasing the sample size? Repeat the above process with a sample size of \\(N=1000\\) and compare the respective distributions and power functions of the estimators.\n\nmat3 &lt;- replicate(1000, {\n  df2&lt;-data.frame(matrix(ncol = 0, nrow = 1000));\n  df2$female &lt;- rbinom(1000,1,0.5);\n  df2$age &lt;- floor(46*runif(1000) + 20);\n  df2$error &lt;- rnorm(1000,0,0.55);\n  df2$Y0 &lt;- alpha + gamma_f*df2$female + gamma_a*df2$age + df2$error;\n  df2$temp &lt;- runif(1000);\n  df2$treat &lt;- ifelse(df2$temp&gt;=median(df2$temp),1,0);\n  df2$Yobs &lt;- df2$Y0 + tau*df2$treat;\n  lm1 &lt;- lm(Yobs ~ treat, data=df2);\n  lm2 &lt;- lm(Yobs ~ treat + female + age, data=df2);\n  coef &lt;- c(lm1$coefficients[2],lm2$coefficients[2])\n}, simplify = \"array\")\nmat4 &lt;-t(mat3)\ncolnames(mat4)&lt;-c(\"beta1_1000\",\"beta2_1000\")\nsummary(mat4)\n\n   beta1_1000         beta2_1000       \n Min.   :-0.16973   Min.   :-0.114858  \n 1st Qu.:-0.02846   1st Qu.:-0.004257  \n Median : 0.02295   Median : 0.020215  \n Mean   : 0.02234   Mean   : 0.019649  \n 3rd Qu.: 0.07392   3rd Qu.: 0.042947  \n Max.   : 0.26633   Max.   : 0.122476  \n\ndescribe(mat4)\n\n           vars    n mean   sd median trimmed  mad   min  max range  skew\nbeta1_1000    1 1000 0.02 0.08   0.02    0.02 0.08 -0.17 0.27  0.44  0.04\nbeta2_1000    2 1000 0.02 0.04   0.02    0.02 0.03 -0.11 0.12  0.24 -0.02\n           kurtosis se\nbeta1_1000    -0.26  0\nbeta2_1000     0.16  0\n\n\nCalculate power for 1000 obs\n\nse3 &lt;- sqrt((gamma_f^2*(0.5-0.5^2) + gamma_a^2*1/12*(65-20)^2 + 0.55^2)/(1000*(0.5-0.5^2)))\nse4 &lt;- sqrt((0.55^2)/(1000*(0.5-0.5^2)))\nse3\n\n[1] 0.07455803\n\nse4\n\n[1] 0.03478505\n\ndata1$theta3 &lt;- pnorm(qnorm(0.025)-data1$tau0/se3) + 1-pnorm(qnorm(0.975)-data1$tau0/se3)\ndata1$theta4 &lt;- pnorm(qnorm(0.025)-data1$tau0/se4) + 1-pnorm(qnorm(0.975)-data1$tau0/se4)\n\nKernel Density (200 vs 1000)\n\nmat5 &lt;- cbind(mat2,mat4)\nggplot(as.data.frame(mat5), aes(x=beta1)) +\n  geom_density(aes(x=beta1,color=\"Beta1_200\")) +\n  geom_density(aes(x=beta2,color=\"Beta2_200\")) +\n  geom_vline(aes(xintercept=0.02,color=\"tau=0.02\")) +\n  geom_density(aes(x=beta1_1000,color=\"Beta1_1000\")) + \n  geom_density(aes(x=beta2_1000,color=\"Beta2_1000\")) + \n  scale_color_manual(\"\",\n                     breaks=c(\"Beta1_200\",\"Beta2_200\",\"Beta1_1000\",\"Beta2_1000\",\"tau=0.02\"),\n                     values=c(\"Beta1_200\"=\"red\", \"Beta2_200\"=\"blue\",\"tau=0.02\"=\"darkgreen\",\n                              \"Beta1_1000\"=\"orange\",\"Beta2_1000\"=\"purple\")) +\n  xlab(\"beta/tau\") +\n  labs(title=\"kernel density plot\")\n\n\n\n\n\n\n\n\nPlot power curves (200 vs 1000)\n\nggplot(data1, aes(x=tau0,y=theta1)) +\n  geom_line(aes(y=theta1,color=\"theta1_200\")) +\n  geom_line(aes(y=theta2,color=\"theta2_200\")) +\n  geom_line(aes(y=theta3,color=\"theta1_1000\")) +\n  geom_line(aes(y=theta4,color=\"theta2_1000\")) +\n  geom_vline(aes(xintercept=0,color=\"H0\")) +\n  geom_vline(aes(xintercept=0.02,color=\"tau=0.02\")) +\n  geom_hline(aes(yintercept=0.05,color=\"a=0.05\")) +\n  scale_color_manual(\"\",\n                     breaks=c(\"theta1_200\",\"theta2_200\",\"theta1_1000\",\n                              \"theta2_1000\",\"H0\",\"tau=0.02\",\"a=0.05\"),\n                     values=c(\"theta1_200\"=\"red\",\"theta2_200\"=\"blue\",\n                              \"theta1_1000\"=\"orange\",\"theta2_1000\"=\"purple\",\n                              \"H0\"=\"black\",\"tau=0.02\"=\"darkgreen\",\"a=0.05\"=\"darkgrey\")) +\n  xlab(\"beta/tau\") +\n  ylab(\"power\") +\n  labs(title=\"power curves\")"
  },
  {
    "objectID": "seminar-1.html#required-r-packages",
    "href": "seminar-1.html#required-r-packages",
    "title": "Power Calculations and Simulations",
    "section": "",
    "text": "library(tidyverse)\nlibrary(modelsummary)\nlibrary(tinytable)\nlibrary(psych)"
  },
  {
    "objectID": "seminar-1.html#learning-objectives",
    "href": "seminar-1.html#learning-objectives",
    "title": "Power Calculations and Simulations",
    "section": "",
    "text": "In this seminar you will learn how to:\n\nmake an a priori power calculation for an experiment;\nsimulate an experiment in R/Stata;\nand visualize the properties of the power function."
  },
  {
    "objectID": "seminar-1.html#motivation",
    "href": "seminar-1.html#motivation",
    "title": "Power Calculations and Simulations",
    "section": "",
    "text": "Statistical power is an valuable theoretical and practical concept. The power of a test is the probability of rejecting the null hypothesis when the alternative hypothesis is true.\nLet’s consider the simple null hypothesis of no average treatment effect,1\n\\[\n  H_0: \\tau_{ATE} = 0\n\\]\nWhen testing this null hypothesis against the alternative,\n\\[\nH_1: \\tau_{ATE} \\neq 0\n\\]\nthe set of values that fulfill the alternative hypothesis is any value on the real line, excluding 0.\nThe power of this test is,\n\\[\n  Pr\\big(\\text{Reject }H_0|H_1\\text{ is true}\\big) = Pr\\big(\\text{Reject }H_0|\\tau_{ATE} = \\tau_0; \\tau_0\\neq 0\\big)\n\\]\nWhen do we reject \\(H_0\\)? A valid test is defined by a rejection rule based on a test static and a corresponding critical value. For example, in this two-sided test,\n\\[\n\\text{Reject }H_0\\text{ if}\\qquad \\bigg| \\frac{\\hat{\\tau}}{se(\\hat{\\tau})}\\bigg|&gt;z_{1-\\alpha/2}\n\\]\nIn statistical inference there is a trade off between Type I and II errors. We limit Type I erros - probability of rejecting \\(H_0\\) when \\(H_0\\) is true - through the choice of \\(\\alpha\\): the significance level. In Economics, this is typically chosen to be 1%, 5%, or 10%.\n\\[\n\\alpha = Pr\\big(\\text{Reject }H_0|H_0\\text{ is true}\\big)\n\\] A test is said to be of size \\(\\alpha\\) if the probability of a Type I error is \\(\\leq \\alpha\\).\nThe finite sample distribution of this test statistic is not known as we do not know the distributions of \\(\\{Y(1),Y(0)\\}\\) upon which the test statistic is based.2 By the Central Limit Theorem, we know that the limiting distribution is standard normal under the null hypothesis. This is true only under \\(H_0\\). The CLT holds for the true mean of estimator (\\(E[\\hat{\\tau}]=\\tau_{ATE}\\)), which we know under \\(H_0\\) to be \\(0\\).\nThus, under \\(H_0\\),\n\\[\n\\frac{\\hat{\\tau}}{se(\\hat{\\tau})} = \\frac{\\hat{\\tau}-E[\\hat{\\tau}]}{se(\\hat{\\tau})} \\overset{d}\\longrightarrow N(0,1) \\quad \\text{as }n\\rightarrow \\infty\n\\] For this reason, we can approximate the distribution of the test statistic with the standard normal.\n\\[\n\\frac{\\hat{\\tau}}{se(\\hat{\\tau})} \\quad a.\\thicksim N(0,1) \\quad \\text{under }H_0\n\\]\n\nExercise 1 Can you show that the size of this test is \\(\\alpha\\) (as \\(n\\rightarrow \\infty\\))?\n\nUnfortunatley, we cannot restrict the probability of both a Type I and II error. Here, we chose the critical values to give us a test of size \\(\\alpha\\). By doing so, we give up the possibility of limiting the probability of a Type II error. Moreover, a smaller \\(\\alpha\\) will necessarily imply a higher probability of Type II error.3\nThe probability of a Type II error depends on the power of the test.\n\\[\nPr\\big(\\text{Failing to reject }H_0|H_0\\text{ is false}\\big) = 1 - Pr\\big(\\text{Reject }H_0|H_1\\text{ is true}\\big)\n\\]\nA more powerful test has a lower probability of Type II error. Since, two tests might have the same size (i.e., \\(\\alpha\\)) we strictly prefer the more powerful test. Power is therefore an important metric by which we can compare different tests.\nFor this test (\\(H_0: \\tau_{ATE}=0\\)), the power of the test tells you how likely you are to detect a given non-zero average treatment effect in the experiment. Given how expensive it is to implement experiments (especially in Economics), this is useful information. There would be no point running a RCT if the likelihood of rejecting a null effect is very low."
  },
  {
    "objectID": "seminar-1.html#power-calculation",
    "href": "seminar-1.html#power-calculation",
    "title": "Power Calculations and Simulations",
    "section": "",
    "text": "In this setting, the power function tells you the probability of rejecting \\(H_0\\) for any true value of the ATE; denoted here by the scalar \\(\\tau_0\\). For the above two-sided test, this is given by,\n\\[\n\\begin{aligned}\n        \\theta(\\tau_0)=&Pr(\\text{Reject }H_0|\\tau_{ATE}=\\tau_0) \\\\\n        =& Pr\\left(\\bigg|\\frac{\\hat{\\tau}}{se(\\hat{\\tau})}\\bigg|&gt;z_{1-\\alpha/2}\\bigg|\\tau_{ATE}=\\tau_0\\right) \\\\\n        =&Pr\\left(\\frac{\\hat{\\tau}}{se(\\hat{\\tau})}&lt;z_{\\alpha/2}\\bigg|\\tau_{ATE}=\\tau_0\\right)+Pr\\left(\\frac{\\hat{\\tau}}{se(\\hat{\\tau})}&gt;z_{1-\\alpha/2}\\bigg|\\tau_{ATE}=\\tau_0\\right) \\\\\n        =&Pr\\left(\\frac{\\hat{\\tau}-\\tau_0}{se(\\hat{\\tau})}+\\frac{\\tau_0}{se(\\hat{\\tau})}&lt;z_{\\alpha/2}\\bigg|\\tau_{ATE}=\\tau_0\\right)+Pr\\left(\\frac{\\hat{\\tau}-\\tau_0}{se(\\hat{\\tau})}+\\frac{\\tau_0}{se(\\hat{\\tau})}&gt;z_{1-\\alpha/2}\\bigg|\\tau_{ATE}=\\tau_0\\right) \\\\\n        \\approx& Pr\\left(Z&lt;z_{\\alpha/2}-\\frac{\\tau_0}{se(\\hat{\\tau})}\\bigg|\\tau_{ATE}=\\tau_0\\right)+Pr\\left(Z&gt;z_{1-\\alpha/2}-\\frac{\\tau_0}{se(\\hat{\\tau})}\\bigg|\\tau_{ATE}=\\tau_0\\right)\n    \\end{aligned}\n\\]\nwhere \\(Z\\) is a standard normal random variable. The final equality is an approximation since we do not know the finite sample distribution of the test statistic.\n\nExercise 2 Given the above definition of the power function, what is \\(\\theta(0)\\)?\n\nTo make further use of this function, we need to define \\(\\hat{\\tau}\\) and \\(se(\\hat{\\tau})\\). Consider,\n\\[\n\\begin{aligned}\n  \\hat{\\tau} =& \\frac{1}{N_t} \\sum_{i:W_i=1}Y_i-\\frac{1}{N_c} \\sum_{i:W_i=0}Y_i \\\\\n  se(\\hat{\\tau}) =& \\sqrt{V^{cons}} \\\\\n  =&\\sqrt{S^2\\left(\\frac{1}{N_t}+\\frac{1}{N_c}\\right)}\n\\end{aligned}\n\\]\nHere we are using the constant-variance finite sample estimator. One cannot use the Neyman estimator without prior knowledge the variance of \\(Y(1)\\), the potential outcome with treatment. For this reason, it is less useful in power calculations made prior to the experiment.4\n\nExercise 3 A researcher has a sample of 650 individuals: \\(N_t = 270\\) and \\(N_c = 380\\). Using the above formulae, calculate the power of the experiment to detect a treatment effect equal to 15% of a standard deviation of the outcome variable.\n\n\nExercise 4 A researcher needs to show that their test has 80% power for a treatment effect of 20% of a standard deviation of the outcome. Using the above formulae, compute the sample size needed to achieve this level of power when assignment into treatment is equal. Then compute the required sample size if only a third of the sample is treated.\n\n\nExercise 5 How could you improve the power of an experiment?"
  },
  {
    "objectID": "seminar-1.html#simulation-of-power-function",
    "href": "seminar-1.html#simulation-of-power-function",
    "title": "Power Calculations and Simulations",
    "section": "",
    "text": "In this section we will simulate an experiment and plot the power function of the OLS estimator from a simple linear regression model.5 We will also examine the impact of adding good controls (covariates) to the estimated model.\n\n\nWe begin by constructing a vector of potential outcomes, \\(\\{Y(0),Y(1)\\}\\), based on a known data generating process (DGP) and treatment effect. We will assign values to \\(Y(0)\\) based on the following linear DGP,\n\\[\n        Y_i(0) = \\alpha + X_i'\\gamma + \\varepsilon_i\n\\]\nwhere,\n\n\\(Y_i(0)\\) is the potential outcome without treatment and is measured after treatment has taken place. In this exercise we assume that the outcome is the log of wages.\n\\(X_i\\) is a vector of covariates that explain some of the variation in \\(Y_i(0)\\). In this instance, we will treat it as a linear term in age and gender dummy.\nThe error term will be drawn from a distribution of our choosing.\n\nFor this exercise, the relevant parameters \\(\\{\\alpha,\\gamma',\\sigma_{\\varepsilon}\\}\\) have been chosen to match a linear model of log wages against a dummy variable for gender and linear term in age, using data from the 2017 US CPS.\nWe can then generate the observed outcome as,\n\\[\n    Y_i = Y_i(0) + \\tau W_i\n\\]\nwhere \\(W_i\\) is an indicator function denoting treatment status in a completely randomized experiment with equal allocation to treatment and control. We will specify the homogeneous treatment to be \\(\\tau = 2\\%\\).6\n\n\n\nStart by setting a seed. This ensures that all random number generators in this programme are replicable.\n\nset.seed(12956)\n\nGenerate an empty dataframe with 200 observations.\n\ndata1 &lt;- data.frame(matrix(ncol = 0, nrow = 200))\n\nDefine the parameters of the simulation.\n\nalpha &lt;- 0.07\ngamma_f &lt;- -0.17\ngamma_a &lt;- 0.08\ntau &lt;- 0.02\n\nAfter having selected each parameter we need to draw values of each explanatory variable, including the error term, in order to calculate the value of the potential outcomes. In this instance we will make use of known distributions.\nThe error term will be drawn from a normal distribution \\(N(0,0.55)\\). Gender will be drawn from a binonmial distribution while age will be a sequence of integers assigned based on a uniform distribution. As each variable is drawn independently, the covariance of the two variables should be zero. However, the covariance in the realized sample will be non-zero.\n\ndata1$female &lt;- rbinom(200,1,0.5)\ndata1$age &lt;- floor(46*runif(200) + 20)\ndata1$error &lt;- rnorm(200,0,0.55)\n\nGenerate Y(0)\n\ndata1$Y0 &lt;- alpha + gamma_f*data1$female + gamma_a*data1$age + data1$error\n\nTo control the number of observations assigned to treatment and control we will not use the binomial distribution command. Instead we will use a uniformly distributed number to sort and then group the data. Note, there are many way to do this assignment.\nWe can then apply the treatment and generate the observable outcome variable.\n\ndata1$temp &lt;- runif(200)\ndata1$treat &lt;- ifelse(data1$temp&gt;=median(data1$temp),1,0)\ntable(data1$treat)\n\n\n  0   1 \n100 100 \n\n\nGenerate the observable outcome variable\n\ndata1$Yobs &lt;- data1$Y0 + tau*data1$treat\n\nWe can now estimate the treatment effect using a linear regression model, with and without the additional covariates.\n\nreg1 &lt;- lm(Yobs ~ treat, data=data1)\nreg2 &lt;- lm(Yobs ~ treat + female + age, data=data1)\nmodelsummary(list(\"(1)\"=reg1,\"(2)\"=reg2), stars=c('*'=.1, '**'=.05,'***'=.01), gof_map = c(\"nobs\", \"r.squared\", \"rmse\"))\n\n \n\n  \n    \n    \n    tinytable_6pi48zj88msnj88p7u2w\n    \n    \n    \n    \n  \n\n  \n    \n      \n        \n        \n              \n                 \n                (1)\n                (2)\n              \n        \n        * p &lt; 0.1, ** p &lt; 0.05, *** p &lt; 0.01\n        \n                \n                  (Intercept)\n                  3.397***\n                  0.094   \n                \n                \n                             \n                  (0.120) \n                  (0.146) \n                \n                \n                  treat      \n                  -0.018  \n                  -0.003  \n                \n                \n                             \n                  (0.170) \n                  (0.082) \n                \n                \n                  female     \n                          \n                  -0.182**\n                \n                \n                             \n                          \n                  (0.083) \n                \n                \n                  age        \n                          \n                  0.079***\n                \n                \n                             \n                          \n                  (0.003) \n                \n                \n                  Num.Obs.   \n                  200     \n                  200     \n                \n                \n                  R2         \n                  0.000   \n                  0.770   \n                \n                \n                  RMSE       \n                  1.20    \n                  0.57    \n                \n        \n      \n    \n\n    \n\n  \n\n\n\n\nWhy are the two estimates of \\(\\tau\\) - \\(\\hat{\\beta}_1^{OLS}\\) and \\(\\hat{\\beta}_2^{OLS}\\) - not equal to 0.02? The OLS estimator is a random variable that has a distribution. The unconfoundedness of the treatment assignment and the homogeneous treatment effects mean that in expectation these estimators are unbiased and equal to 0.02. However, a particular realization may not be. In fact, the probability that \\(\\hat{\\beta}^{OLS}=\\tau_{ATE}=0.2\\) is 0.\n\n\n\nTo examine this characteristic of both estimators we will repeat the above process R-times. This will allow us to observe the overall distribution of the estimator. To do so we will write a short program that executes the same process R-times. The programme stores value of the estimator in a matrix.\n\nmat1 &lt;- replicate(1000, {\n  df&lt;-data.frame(matrix(ncol = 0, nrow = 200));\n  df$female &lt;- rbinom(200,1,0.5);\n  df$age &lt;- floor(46*runif(200) + 20);\n  df$error &lt;- rnorm(200,0,0.55);\n  df$Y0 &lt;- alpha + gamma_f*df$female + gamma_a*df$age + df$error;\n  df$temp &lt;- runif(200);\n  df$treat &lt;- ifelse(df$temp&gt;=median(df$temp),1,0);\n  df$Yobs &lt;- df$Y0 + tau*df$treat;\n  lm1 &lt;- lm(Yobs ~ treat, data=df);\n  lm2 &lt;- lm(Yobs ~ treat + female + age, data=df);\n  coef &lt;- c(lm1$coefficients[2],lm2$coefficients[2])\n}, simplify = \"array\")\nmat2 &lt;-t(mat1)\ncolnames(mat2)&lt;-c(\"beta1\",\"beta2\")\nsummary(mat2)\n\n     beta1              beta2         \n Min.   :-0.50429   Min.   :-0.22257  \n 1st Qu.:-0.09083   1st Qu.:-0.03110  \n Median : 0.02168   Median : 0.01811  \n Mean   : 0.01898   Mean   : 0.02053  \n 3rd Qu.: 0.12914   3rd Qu.: 0.07469  \n Max.   : 0.52228   Max.   : 0.28544  \n\ndescribe(mat2)\n\n      vars    n mean   sd median trimmed  mad   min  max range  skew kurtosis\nbeta1    1 1000 0.02 0.17   0.02    0.02 0.16 -0.50 0.52  1.03 -0.07     0.06\nbeta2    2 1000 0.02 0.08   0.02    0.02 0.08 -0.22 0.29  0.51 -0.02    -0.01\n        se\nbeta1 0.01\nbeta2 0.00\n\n\nHaving repeated the process 1000 times we can now examine the characteristics of each estimator, first by summarizing the stored values and then graphically. First, using a histogram:\n\nggplot(as.data.frame(mat2), aes(x=beta1)) +\n  geom_histogram(colour=\"black\", fill=\"lightgrey\") +\n  geom_vline(aes(xintercept=mean(beta1)),\n            color=\"red\", linetype=\"dashed\", size=1)\n\n\n\n\n\n\n\nggplot(as.data.frame(mat2), aes(x=beta2)) +\n  geom_histogram(colour=\"black\", fill=\"lightgrey\") +\n  geom_vline(aes(xintercept=mean(beta2)),\n            color=\"red\", linetype=\"dashed\", size=1)\n\n\n\n\n\n\n\n\nSecond, using a kernel density function, which generates a smoothed estimate of the density function.\n\nggplot(as.data.frame(mat2), aes(x=beta1)) +\n  geom_density(aes(x=beta1,color=\"Beta1\")) +\n  geom_density(aes(x=beta2,color=\"Beta2\"),linetype=\"dashed\") +\n  geom_vline(aes(xintercept=0.02,color=\"tau=0.02\")) +\n  scale_color_manual(\"\",\n                     breaks=c(\"Beta1\",\"Beta2\",\"tau=0.02\"),\n                     values=c(\"Beta1\"=\"red\", \"Beta2\"=\"blue\",\"tau=0.02\"=\"darkgreen\")) +\n  xlab(\"beta/tau\") +\n  labs(title=\"kernel density plot\")\n\n\n\n\n\n\n\n\nThe distribution of both estimators is remarkably . This is by design. The distribution of \\(\\hat{\\beta}\\) is dependent on the distribution of the error term. In this instance, that is a normal distribution because of the DGP we specified.\n\n\n\nTo compute the power function we need to know the variance of each of our two OLS estimators. Given that the variance of the estimator is in fact known, we could include this directly. Alternatively, we could estimate the variance of the each estimator using the distribution from the simulation.\nLet us see how close the simulation variance is to the true DGP variance. From the DGP, we know that\n\\[\n\\begin{aligned}\n    Var(\\hat{\\beta}^{OLS}_1) &= \\frac{\\gamma_f^2Var(female_i)+\\gamma_a^2Var(age_i)+\\sigma_{\\varepsilon}^2}{N(\\bar{W}-\\bar{W}^2)} \\\\\n    Var(\\hat{\\beta}^{OLS}_2) &= \\frac{\\sigma_{\\varepsilon}^2}{N(\\bar{W}-\\bar{W}^2)}\n\\end{aligned}\n\\] where, \\[\n    \\begin{aligned}\n    Var(female_i) &= 0.5(1-0.5) \\\\\n    Var(age_i) &= \\frac{1}{12}(65-20)^2\n\\end{aligned}\n\\]\nCalculate standard error for each estimator based on known distributions.\n\nse1 &lt;- sqrt((gamma_f^2*(0.5-0.5^2) + gamma_a^2*1/12*(65-20)^2 + 0.55^2)/(200*(0.5-0.5^2)))\nse2 &lt;- sqrt((0.55^2)/(200*(0.5-0.5^2)))\nse1\n\n[1] 0.1667168\n\nse2\n\n[1] 0.07778175\n\n\nApproximate the standard error using the standard deviation of the simulations.\n\nsd1 &lt;- sd(as.data.frame(mat2)$beta1)\nsd1\n\n[1] 0.168046\n\nsd2 &lt;- sd(as.data.frame(mat2)$beta2)\nsd2\n\n[1] 0.07764108\n\n\nFor now we will proceed to calculate the power function using the known DGP variance. To do so we will first construct a grid of alternative values of \\(beta\\). Next, we will estimate the power for each true value of \\(beta\\); i.e. each value in the grid. Finally, we will plot the two power functions alongside one another.\nConstruct grid of alternative values of \\(\\tau_0\\), centered around \\(\\tau_0\\)=0.02. This should include \\(\\tau_0=0\\), the null hypothesis.\n\ndata1$tau0[1]&lt;- -0.1 + tau\nfor (i in 2:200) {\n  data1$tau0[i] &lt;- data1$tau0[i-1] + 0.001\n}\n\nCalculate power at each value of \\(\\tau_0\\).\n\ndata1$theta1 &lt;- pnorm(qnorm(0.025)-data1$tau0/se1) + 1-pnorm(qnorm(0.975)-data1$tau0/se1)\ndata1$theta2 &lt;- pnorm(qnorm(0.025)-data1$tau0/se2) + 1-pnorm(qnorm(0.975)-data1$tau0/se2)\n\nPlot power curves\n\nggplot(data1, aes(x=tau0,y=theta1)) +\n  geom_line(aes(y=theta1,color=\"Beta1\")) +\n  geom_line(aes(y=theta2,color=\"Beta2\"),linetype=\"dashed\") +\n  geom_vline(aes(xintercept=0,color=\"H0\")) +\n  geom_vline(aes(xintercept=0.02,color=\"tau=0.02\")) +\n  geom_hline(aes(yintercept=0.05,color=\"a=0.05\")) +\n  scale_color_manual(\"\",\n                     breaks=c(\"Beta1\",\"Beta2\",\"H0\",\"tau=0.02\",\"a=0.05\"),\n                     values=c(\"Beta1\"=\"red\", \"Beta2\"=\"blue\",\"H0\"=\"black\",\n                              \"tau=0.02\"=\"darkgreen\",\"a=0.05\"=\"darkgrey\")) +\n  xlab(\"beta/tau\") +\n  ylab(\"power\") +\n  labs(title=\"power curves\")\n\n\n\n\n\n\n\n\nIt is clear from the displayed power functions that the second estimator is universally more powerful. The lower variance of this estimators translates directly into a higher probability of rejecting the null hypothesis of no-effect for all non-zero values of the true hypothesis. It is for this reason that we strongly prefer the second estimator and do not simply estimate a model of outcome on treatment.\nIn this instance, there is relatively little power to reject the null at the true value. Can you calculate the power at \\(\\tau_0=0.02\\)?\n\n\n\nWe have explored the value of including covariates, but what about increasing the sample size? Repeat the above process with a sample size of \\(N=1000\\) and compare the respective distributions and power functions of the estimators.\n\nmat3 &lt;- replicate(1000, {\n  df2&lt;-data.frame(matrix(ncol = 0, nrow = 1000));\n  df2$female &lt;- rbinom(1000,1,0.5);\n  df2$age &lt;- floor(46*runif(1000) + 20);\n  df2$error &lt;- rnorm(1000,0,0.55);\n  df2$Y0 &lt;- alpha + gamma_f*df2$female + gamma_a*df2$age + df2$error;\n  df2$temp &lt;- runif(1000);\n  df2$treat &lt;- ifelse(df2$temp&gt;=median(df2$temp),1,0);\n  df2$Yobs &lt;- df2$Y0 + tau*df2$treat;\n  lm1 &lt;- lm(Yobs ~ treat, data=df2);\n  lm2 &lt;- lm(Yobs ~ treat + female + age, data=df2);\n  coef &lt;- c(lm1$coefficients[2],lm2$coefficients[2])\n}, simplify = \"array\")\nmat4 &lt;-t(mat3)\ncolnames(mat4)&lt;-c(\"beta1_1000\",\"beta2_1000\")\nsummary(mat4)\n\n   beta1_1000         beta2_1000       \n Min.   :-0.16973   Min.   :-0.114858  \n 1st Qu.:-0.02846   1st Qu.:-0.004257  \n Median : 0.02295   Median : 0.020215  \n Mean   : 0.02234   Mean   : 0.019649  \n 3rd Qu.: 0.07392   3rd Qu.: 0.042947  \n Max.   : 0.26633   Max.   : 0.122476  \n\ndescribe(mat4)\n\n           vars    n mean   sd median trimmed  mad   min  max range  skew\nbeta1_1000    1 1000 0.02 0.08   0.02    0.02 0.08 -0.17 0.27  0.44  0.04\nbeta2_1000    2 1000 0.02 0.04   0.02    0.02 0.03 -0.11 0.12  0.24 -0.02\n           kurtosis se\nbeta1_1000    -0.26  0\nbeta2_1000     0.16  0\n\n\nCalculate power for 1000 obs\n\nse3 &lt;- sqrt((gamma_f^2*(0.5-0.5^2) + gamma_a^2*1/12*(65-20)^2 + 0.55^2)/(1000*(0.5-0.5^2)))\nse4 &lt;- sqrt((0.55^2)/(1000*(0.5-0.5^2)))\nse3\n\n[1] 0.07455803\n\nse4\n\n[1] 0.03478505\n\ndata1$theta3 &lt;- pnorm(qnorm(0.025)-data1$tau0/se3) + 1-pnorm(qnorm(0.975)-data1$tau0/se3)\ndata1$theta4 &lt;- pnorm(qnorm(0.025)-data1$tau0/se4) + 1-pnorm(qnorm(0.975)-data1$tau0/se4)\n\nKernel Density (200 vs 1000)\n\nmat5 &lt;- cbind(mat2,mat4)\nggplot(as.data.frame(mat5), aes(x=beta1)) +\n  geom_density(aes(x=beta1,color=\"Beta1_200\")) +\n  geom_density(aes(x=beta2,color=\"Beta2_200\")) +\n  geom_vline(aes(xintercept=0.02,color=\"tau=0.02\")) +\n  geom_density(aes(x=beta1_1000,color=\"Beta1_1000\")) + \n  geom_density(aes(x=beta2_1000,color=\"Beta2_1000\")) + \n  scale_color_manual(\"\",\n                     breaks=c(\"Beta1_200\",\"Beta2_200\",\"Beta1_1000\",\"Beta2_1000\",\"tau=0.02\"),\n                     values=c(\"Beta1_200\"=\"red\", \"Beta2_200\"=\"blue\",\"tau=0.02\"=\"darkgreen\",\n                              \"Beta1_1000\"=\"orange\",\"Beta2_1000\"=\"purple\")) +\n  xlab(\"beta/tau\") +\n  labs(title=\"kernel density plot\")\n\n\n\n\n\n\n\n\nPlot power curves (200 vs 1000)\n\nggplot(data1, aes(x=tau0,y=theta1)) +\n  geom_line(aes(y=theta1,color=\"theta1_200\")) +\n  geom_line(aes(y=theta2,color=\"theta2_200\")) +\n  geom_line(aes(y=theta3,color=\"theta1_1000\")) +\n  geom_line(aes(y=theta4,color=\"theta2_1000\")) +\n  geom_vline(aes(xintercept=0,color=\"H0\")) +\n  geom_vline(aes(xintercept=0.02,color=\"tau=0.02\")) +\n  geom_hline(aes(yintercept=0.05,color=\"a=0.05\")) +\n  scale_color_manual(\"\",\n                     breaks=c(\"theta1_200\",\"theta2_200\",\"theta1_1000\",\n                              \"theta2_1000\",\"H0\",\"tau=0.02\",\"a=0.05\"),\n                     values=c(\"theta1_200\"=\"red\",\"theta2_200\"=\"blue\",\n                              \"theta1_1000\"=\"orange\",\"theta2_1000\"=\"purple\",\n                              \"H0\"=\"black\",\"tau=0.02\"=\"darkgreen\",\"a=0.05\"=\"darkgrey\")) +\n  xlab(\"beta/tau\") +\n  ylab(\"power\") +\n  labs(title=\"power curves\")"
  },
  {
    "objectID": "seminar-1.html#footnotes",
    "href": "seminar-1.html#footnotes",
    "title": "Power Calculations and Simulations",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nThis is not the same as Fisher’s sharp null hypothesis that the unit-level treatment effect is 0 for all units in the data.↩︎\nThose familiar with the Classical Linear Regression Model might find this surprising. Recall, one of the assumption of the CLRM is that the error term is normally distributed. This assumption means that even in a finite sample, the distribution of the estimator (or test statistic) is normally distributed. When the variance of the error term is not known, and must be estimated, the resulting test statistic is T-distributed.↩︎\nIn the limit, we can reduce the probability of a Type I error to 0 by setting the rejection rule to “never reject”. As a result, the probability of a Type II error will be 1 as you will always fail to reject \\(H_0\\) when it is false.↩︎\nYou could use estimates from a previous study.↩︎\nRecall from lectures, the \\(\\hat{\\beta}\\)-OLS estimator for a simple univariate regression model ($Y_i = \\alpha + \\beta W_i + \\varepsilon_i$), is the same as the above \\(\\hat{\\tau}\\) estimator.↩︎\nThis assumption simplifies the simulation by removing any need to consider bias related to heterogeneity.↩︎"
  },
  {
    "objectID": "material-cef.html",
    "href": "material-cef.html",
    "title": "Conditional Expectation Function",
    "section": "",
    "text": "Consider the random variable \\(Y_i\\in\\mathbb{R}\\) and the random vector \\(X_i\\in\\mathbb{R}^k\\), \\(k\\geq1\\).1\n\n\nThe Conditional Expecation Function (CEF) - denoted \\(E[Y_i|X_i]\\) - is a random function. It is a function that returns the expected value of \\(Y_i\\) for each realized value of \\(X_i\\). Since \\(X_i\\) is a random vector the resulting function is random itself.\nIf we fix \\(X_i=x\\), then the value at which we are evaluating the function is no longer random. The result is a constant: the expected value of \\(Y_i\\) at the given \\(x\\).\n\\[\nE[Y_i|X_i=x] = \\int y \\cdot f_{Y}(y|X_i=x)dy = \\int y dF_{Y}(y|X_i=x)\n\\]\nThis follows the same logic that the expectation of a random variable is, \\(E[Y_i]\\), is not random.\nDiscrete case. The book devotes a lot time to the discussion of cases were \\(X_i\\) is a discrete random variable; using the notation \\(W_i\\in\\{0,1\\}\\) or \\(D_i\\in\\{0,1\\}\\). In this unique case, we can write the CEF as,\n\\[\nE[Y_i|D_i] = E[Y_i|D_i=0] + D_i\\cdot\\big(E[Y_i|D_i=1]-E[Y_i|D_i=0]\\big)\n\\]\nThe above function returns \\(E[Y_i|D_i=0]\\) when \\(D_i=0\\) and \\(E[Y_i|D_i=1]\\) when \\(D_i=1\\). This expression for the CEF will be useful in latter chapters of the book.\n\n\n\nThe Law of Iterated Expectations says that given two random variables2 \\([Y_i,X_i]\\), we can express the unconditional expected value of \\(Y_i\\) as the expected value of the conditional expectation of \\(Y_i\\) on \\(X_i\\).\n\\[\n        E[Y_i] = E\\big[E[Y_i|X_i]\\big]\n\\]\nWhere the outside expectation is with respect to \\(X_i\\),3 since the CEF is a random function of \\(X_i\\). We can expand this as follows,\n\\[\nE[Y_i] = \\int t \\cdot f_{Y_i}(t)dt = \\int\\int y \\cdot f_{Y_i|X}(y|x)dyf_X(x)dx = E\\big[E[Y_i|X_i]\\big]\n\\]\n\nExample 1 Suppose \\(Y_i\\) and \\(X_i\\) are both discrete, \\(Y_i\\in\\{1,2\\}\\) and \\(X_i\\in\\{3,4\\}\\), with the joint distribution:\n\n\\(f_{Y,X}\\)\n\n\n\n\\(X_i=3\\)\n\\(X_i=2\\)\n\n\n\\(Y_i=1\\)\n1/10\n3/10\n\n\n\\(Y_i=2\\)\n2/10\n4/10\n\n\n\nWe can then define the two marginal distributions,\n\n\\(f_Y\\)\n\n\n\\(Y_i=1\\)\n\\(Y_i=2\\)\n\n\n4/10\n6/10\n\n\n\nand,\n\n\\(f_X\\)\n\n\n\\(X_i=3\\)\n\\(X_i=4\\)\n\n\n3/10\n7/10\n\n\n\nLikewise, we know the conditional distribution \\(f_{Y|X}\\); which we get by dividing the joint distribution by the marginal distribution of \\(X_i\\). Each column of the conditional distribution should add up to 1.\n\n\\(f_{Y|X}\\)\n\n\n\n\\(X_i=3\\)\n\\(X_i=4\\)\n\n\n\\(Y_i=1\\)\n1/3\n3/7\n\n\n\\(Y_i=2\\)\n2/3\n4/7\n\n\n\nNow we can calculate the following objects:\n\n\\(E[Y_i]\\)\n\n\\[\n\\begin{aligned}\n        E[Y_i] =& 1\\cdot Pr(Y_i=1)+2\\cdot Pr(Y_i=2) \\\\\n        =&1\\cdot 4/10+2\\cdot 6/10 \\\\\n        =&16/10\n    \\end{aligned}\n\\]\n\n\\(E[Y_i|X_i=3]\\)\n\n\\[\n\\begin{aligned}\n        E[Y_i|X_i=3] =& 1\\cdot Pr(Y_i=1|X_i=3)+2\\cdot Pr(Y_i=2|X_i=3) \\\\\n        =&1\\cdot 1/3+2\\cdot 2/3 \\\\\n        =&5/3\n\\end{aligned}\n\\]\n\n\\(E[Y_i|X_i=4]\\)\n\n\\[\n\\begin{aligned}\n        E[Y_i|X_i=4] =& 1\\cdot Pr(Y_i=1|X_i=4)+2\\cdot Pr(Y_i=2|X_i=4) \\\\\n        =&1\\cdot 3/7+2\\cdot 4/7 \\\\\n        =&11/7\n    \\end{aligned}\n\\]\n\n\\(E\\big[E[Y_i|X_i]\\big]\\)\n\n\\[\n\\begin{aligned}\n        E\\big[E[Y_i|X_i]\\big] =& E[Y_i|X_i=3]\\cdot Pr(X_i=3)+ E[Y_i|X_i=4]\\cdot Pr(X_i=4) \\\\\n        =&5/3\\cdot3/10+11/7\\cdot 7/10 \\\\\n        =&16/10\n    \\end{aligned}\n\\]\nWe have therefore demonstrated the law of iterated expectations.\n\nWe can extend this principle to conditional expectations. Suppose you have three random variables/vectors \\(\\{Y_i,X_i,Z_i\\}\\), we can express the conditional expected value of \\(Y_i\\) on \\(X_i\\) as the (conditional) expected value of the conditional expectation of \\(Y_i\\) on \\(X_i\\) and \\(Z_i\\).\n\\[\n        E[Y_i|X_i] = E\\big[E[Y_i|X_i,Z_i]|X_i\\big]\n\\]\nHere the outside expectation is with respect \\(Z_i\\) conditional on \\(X_i\\). It utilizes the conditional distribution \\(f_{Z|X}\\) to form the outside expectation,\n\\[\nE[Y_i|X_i] = \\int y \\cdot f_{Y|X}(y|X_i)dt = \\int\\int y \\cdot f_{Y|X,Z}(y|X_i,z)dyf_{Z|X}(z|X_i)dz = E\\big[E[Y_i|X_i,Z_i]|X_i\\big]\n\\]\n\n\n\nThe following three theorems can be found in a range of Econometrics textbooks and Microeconometrics texts, including MM & MHE\n\nTheorem 1 We can express the observed outcome \\(Y_i\\) as a sum of \\(E[Y_i|X_i]+\\varepsilon_i\\) where \\(E[\\varepsilon_i|X_i]=0\\) (i.e., mean independent).\n\n\nProof. \n\n\\(E[\\varepsilon_i | X_i] = E[Y_i - E[Y_i | X_i] | X_i] = E[Y_i | X_i] - E[Y_i | X_i] = 0\\)\n\\(E[h(X_i)\\varepsilon_i] = E[h(X_i)E[\\varepsilon_i | X_i]] = E[h(X_i) \\times 0] = 0\\)\n\n\n\nTheorem 2 \\(E[Y_i|X_i]\\) is the best predictor of \\(Y_i\\).\n\n\nProof. \\[\n\\begin{aligned}\n(Y_i - m(X_i))^2 =& \\left((Y_i - E[Y_i | X_i]) + (E[Y_i | X_i] - m(X_i))\\right)^2 \\\\\n=& (Y_i - E[Y_i \\| X_i])^2 + (E[Y_i | X_i] - m(X_i))^2 \\\\&+ 2(Y_i - E[Y_i | X_i]) \\times (E[Y_i | X_i] - m(X_i))\n\\end{aligned}\n\\]\nThe last term (cross product) is mean zero. Thus, the function is minimized by setting \\(m(X_i) = E[Y_i | X_i]\\).\n\n\nTheorem 3 [ANOVA Theorem] The variance of \\(Y_i\\) can be decomposed as \\(V(E[Y_i|X_i])+E(V(Y_i|X_i))\\)\n\n\nProof. \\[\n\\begin{aligned}\n        V(Y_i)=&V(E[Y_i|X_i] + \\varepsilon_i) \\\\\n        =&V(E[Y_i|X_i])+V(\\varepsilon_i) \\\\\n        =&V(E[Y_i|X_i])+E[\\varepsilon_i^2]\n    \\end{aligned}\n\\] The second line follows from Theorem 1.1 (independence) and\n\\[\n        E[\\varepsilon_i^2]=E\\left[E[\\varepsilon_i^2|X_i]\\right]=E\\left[V(Y_i|X_i)\\right]\n\\]"
  },
  {
    "objectID": "material-cef.html#definition",
    "href": "material-cef.html#definition",
    "title": "Conditional Expectation Function",
    "section": "",
    "text": "The Conditional Expecation Function (CEF) - denoted \\(E[Y_i|X_i]\\) - is a random function. It is a function that returns the expected value of \\(Y_i\\) for each realized value of \\(X_i\\). Since \\(X_i\\) is a random vector the resulting function is random itself.\nIf we fix \\(X_i=x\\), then the value at which we are evaluating the function is no longer random. The result is a constant: the expected value of \\(Y_i\\) at the given \\(x\\).\n\\[\nE[Y_i|X_i=x] = \\int y \\cdot f_{Y}(y|X_i=x)dy = \\int y dF_{Y}(y|X_i=x)\n\\]\nThis follows the same logic that the expectation of a random variable is, \\(E[Y_i]\\), is not random.\nDiscrete case. The book devotes a lot time to the discussion of cases were \\(X_i\\) is a discrete random variable; using the notation \\(W_i\\in\\{0,1\\}\\) or \\(D_i\\in\\{0,1\\}\\). In this unique case, we can write the CEF as,\n\\[\nE[Y_i|D_i] = E[Y_i|D_i=0] + D_i\\cdot\\big(E[Y_i|D_i=1]-E[Y_i|D_i=0]\\big)\n\\]\nThe above function returns \\(E[Y_i|D_i=0]\\) when \\(D_i=0\\) and \\(E[Y_i|D_i=1]\\) when \\(D_i=1\\). This expression for the CEF will be useful in latter chapters of the book."
  },
  {
    "objectID": "material-cef.html#law-of-iterated-expectations",
    "href": "material-cef.html#law-of-iterated-expectations",
    "title": "Conditional Expectation Function",
    "section": "",
    "text": "The Law of Iterated Expectations says that given two random variables2 \\([Y_i,X_i]\\), we can express the unconditional expected value of \\(Y_i\\) as the expected value of the conditional expectation of \\(Y_i\\) on \\(X_i\\).\n\\[\n        E[Y_i] = E\\big[E[Y_i|X_i]\\big]\n\\]\nWhere the outside expectation is with respect to \\(X_i\\),3 since the CEF is a random function of \\(X_i\\). We can expand this as follows,\n\\[\nE[Y_i] = \\int t \\cdot f_{Y_i}(t)dt = \\int\\int y \\cdot f_{Y_i|X}(y|x)dyf_X(x)dx = E\\big[E[Y_i|X_i]\\big]\n\\]\n\nExample 1 Suppose \\(Y_i\\) and \\(X_i\\) are both discrete, \\(Y_i\\in\\{1,2\\}\\) and \\(X_i\\in\\{3,4\\}\\), with the joint distribution:\n\n\\(f_{Y,X}\\)\n\n\n\n\\(X_i=3\\)\n\\(X_i=2\\)\n\n\n\\(Y_i=1\\)\n1/10\n3/10\n\n\n\\(Y_i=2\\)\n2/10\n4/10\n\n\n\nWe can then define the two marginal distributions,\n\n\\(f_Y\\)\n\n\n\\(Y_i=1\\)\n\\(Y_i=2\\)\n\n\n4/10\n6/10\n\n\n\nand,\n\n\\(f_X\\)\n\n\n\\(X_i=3\\)\n\\(X_i=4\\)\n\n\n3/10\n7/10\n\n\n\nLikewise, we know the conditional distribution \\(f_{Y|X}\\); which we get by dividing the joint distribution by the marginal distribution of \\(X_i\\). Each column of the conditional distribution should add up to 1.\n\n\\(f_{Y|X}\\)\n\n\n\n\\(X_i=3\\)\n\\(X_i=4\\)\n\n\n\\(Y_i=1\\)\n1/3\n3/7\n\n\n\\(Y_i=2\\)\n2/3\n4/7\n\n\n\nNow we can calculate the following objects:\n\n\\(E[Y_i]\\)\n\n\\[\n\\begin{aligned}\n        E[Y_i] =& 1\\cdot Pr(Y_i=1)+2\\cdot Pr(Y_i=2) \\\\\n        =&1\\cdot 4/10+2\\cdot 6/10 \\\\\n        =&16/10\n    \\end{aligned}\n\\]\n\n\\(E[Y_i|X_i=3]\\)\n\n\\[\n\\begin{aligned}\n        E[Y_i|X_i=3] =& 1\\cdot Pr(Y_i=1|X_i=3)+2\\cdot Pr(Y_i=2|X_i=3) \\\\\n        =&1\\cdot 1/3+2\\cdot 2/3 \\\\\n        =&5/3\n\\end{aligned}\n\\]\n\n\\(E[Y_i|X_i=4]\\)\n\n\\[\n\\begin{aligned}\n        E[Y_i|X_i=4] =& 1\\cdot Pr(Y_i=1|X_i=4)+2\\cdot Pr(Y_i=2|X_i=4) \\\\\n        =&1\\cdot 3/7+2\\cdot 4/7 \\\\\n        =&11/7\n    \\end{aligned}\n\\]\n\n\\(E\\big[E[Y_i|X_i]\\big]\\)\n\n\\[\n\\begin{aligned}\n        E\\big[E[Y_i|X_i]\\big] =& E[Y_i|X_i=3]\\cdot Pr(X_i=3)+ E[Y_i|X_i=4]\\cdot Pr(X_i=4) \\\\\n        =&5/3\\cdot3/10+11/7\\cdot 7/10 \\\\\n        =&16/10\n    \\end{aligned}\n\\]\nWe have therefore demonstrated the law of iterated expectations.\n\nWe can extend this principle to conditional expectations. Suppose you have three random variables/vectors \\(\\{Y_i,X_i,Z_i\\}\\), we can express the conditional expected value of \\(Y_i\\) on \\(X_i\\) as the (conditional) expected value of the conditional expectation of \\(Y_i\\) on \\(X_i\\) and \\(Z_i\\).\n\\[\n        E[Y_i|X_i] = E\\big[E[Y_i|X_i,Z_i]|X_i\\big]\n\\]\nHere the outside expectation is with respect \\(Z_i\\) conditional on \\(X_i\\). It utilizes the conditional distribution \\(f_{Z|X}\\) to form the outside expectation,\n\\[\nE[Y_i|X_i] = \\int y \\cdot f_{Y|X}(y|X_i)dt = \\int\\int y \\cdot f_{Y|X,Z}(y|X_i,z)dyf_{Z|X}(z|X_i)dz = E\\big[E[Y_i|X_i,Z_i]|X_i\\big]\n\\]"
  },
  {
    "objectID": "material-cef.html#properties-of-the-cef",
    "href": "material-cef.html#properties-of-the-cef",
    "title": "Conditional Expectation Function",
    "section": "",
    "text": "The following three theorems can be found in a range of Econometrics textbooks and Microeconometrics texts, including MM & MHE\n\nTheorem 1 We can express the observed outcome \\(Y_i\\) as a sum of \\(E[Y_i|X_i]+\\varepsilon_i\\) where \\(E[\\varepsilon_i|X_i]=0\\) (i.e., mean independent).\n\n\nProof. \n\n\\(E[\\varepsilon_i | X_i] = E[Y_i - E[Y_i | X_i] | X_i] = E[Y_i | X_i] - E[Y_i | X_i] = 0\\)\n\\(E[h(X_i)\\varepsilon_i] = E[h(X_i)E[\\varepsilon_i | X_i]] = E[h(X_i) \\times 0] = 0\\)\n\n\n\nTheorem 2 \\(E[Y_i|X_i]\\) is the best predictor of \\(Y_i\\).\n\n\nProof. \\[\n\\begin{aligned}\n(Y_i - m(X_i))^2 =& \\left((Y_i - E[Y_i | X_i]) + (E[Y_i | X_i] - m(X_i))\\right)^2 \\\\\n=& (Y_i - E[Y_i \\| X_i])^2 + (E[Y_i | X_i] - m(X_i))^2 \\\\&+ 2(Y_i - E[Y_i | X_i]) \\times (E[Y_i | X_i] - m(X_i))\n\\end{aligned}\n\\]\nThe last term (cross product) is mean zero. Thus, the function is minimized by setting \\(m(X_i) = E[Y_i | X_i]\\).\n\n\nTheorem 3 [ANOVA Theorem] The variance of \\(Y_i\\) can be decomposed as \\(V(E[Y_i|X_i])+E(V(Y_i|X_i))\\)\n\n\nProof. \\[\n\\begin{aligned}\n        V(Y_i)=&V(E[Y_i|X_i] + \\varepsilon_i) \\\\\n        =&V(E[Y_i|X_i])+V(\\varepsilon_i) \\\\\n        =&V(E[Y_i|X_i])+E[\\varepsilon_i^2]\n    \\end{aligned}\n\\] The second line follows from Theorem 1.1 (independence) and\n\\[\n        E[\\varepsilon_i^2]=E\\left[E[\\varepsilon_i^2|X_i]\\right]=E\\left[V(Y_i|X_i)\\right]\n\\]"
  },
  {
    "objectID": "material-cef.html#footnotes",
    "href": "material-cef.html#footnotes",
    "title": "Conditional Expectation Function",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nThe subscript \\(i\\) is not necessary here. However, this notation is consistent with the rest of the book. In this book, \\(Y_i\\) denotes a random variable, \\(\\in \\mathbb{R}\\), and \\(Y\\) a random vector, \\(\\in \\mathbb{R}^n\\). Likewise, \\(X_i\\) is a random vector, \\(\\in \\mathbb{R}^k\\), while \\(X\\) will represent a random matrix, \\(\\in \\mathbb{R}^n \\times \\mathbb{R}^k\\).↩︎\nThis can be extended to random vectors.↩︎\nSome texts use the notation \\(E_X\\big[E[Y_i|X_i]\\big]\\) to demonstrate that the outside expectation is with respect to \\(X_i\\).↩︎"
  },
  {
    "objectID": "lecture-1-1.html",
    "href": "lecture-1-1.html",
    "title": "Introduction",
    "section": "",
    "text": "Introduction"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Econometrics 2: Microeconometrics",
    "section": "",
    "text": "This is a Quarto website.\nTo learn more about Quarto websites visit https://quarto.org/docs/websites.\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "lecture-1-2.html",
    "href": "lecture-1-2.html",
    "title": "Understanding Causation",
    "section": "",
    "text": "Understanding Causation"
  },
  {
    "objectID": "material-linearalgebra.html",
    "href": "material-linearalgebra.html",
    "title": "Linear Algebra",
    "section": "",
    "text": "Consider a set of \\(k\\) \\(n\\)-dimensional vectors \\(\\{X_{1},X_{2},...,X_{k}\\}\\). These vectors are,\n\nDefinition 1 linearly dependent if there exists a set of scalars \\(\\{a_{1},a_{2},\\dots,a_{k}\\}\\) such that\n\\[\na_1X_1 + a_2X_2+\\ldots+a_kX_k=0\n\\]\nwhere at least one \\(a_i\\neq0\\).\n\nAlternatively, they are,\n\nDefinition 2 linearly independent if the only set of scalars \\(\\{a_{1},a_{2},\\dots,a_{k}\\}\\) that satisfies the above condition is \\(a_1,a_2,\\dots,a_k=0\\).\n\nIf we collect these \\(k\\) column-vectors in a matrix, \\(X=[X_1\\;X_2 \\dots X_k]\\), then the linear dependence condition can be written as,\n\\[\na_1X_1 + a_2X_2+\\ldots+a_kX_k=\\begin{bmatrix} X_1\\;X_2 \\dots X_k\\end{bmatrix}\\begin{bmatrix}a_1\\\\a_2\\\\\\vdots\\\\a_k\\end{bmatrix}=Xa = 0\n\\]\nGiven any \\(n\\times k\\) matrix \\(X\\), its columns are,\n\nDefinition 3 linearly dependent if there exists a vector \\(a\\in\\mathbb{R}^k\\) such that \\(a\\neq0\\) and \\(Xa=0\\);\n\nor,\n\nDefinition 4 linearly independent if the only vector \\(a\\in\\mathbb{R}^k\\) such that \\(Xa=0\\) is \\(a=0\\).\n\nFor any matrix there may be more than one vector \\(a\\in\\mathbb{R}^{k}\\) such that \\(Xa=0\\). Indeed, if both \\(a_{1},a_{2}\\in\\mathbb{R}^{k}\\)\nsatisfy this condition and \\(a_{1}\\neq a_{2}\\) then you can show that any linear combination of \\(\\{a_{1},a_{2}\\}\\) satisfies the\ncondition \\(X(a_{1}b_{1}+a_{2}b_{2})=0\\) for \\(b_{1},b_{2}\\in\\mathbb{R}\\). Thus, there exists an entire set of vectors which satisfy this condition. This set is referred to as the,\n\nDefinition 5 null space of \\(X\\), \\[\n\\mathcal{N}(X) = \\{a\\in\\mathbb{R}^k:\\;Xa=0\\}\n\\]\n\nIt should be evident from the definition that if the columns of \\(X\\) are linearly independent then \\(\\mathcal{N}(X)=\\{0\\}\\), a singleton. That is, it just includes the 0-vector.\n\n\n\nHere, we concern ourselves only with real vectors from \\(\\mathbb{R}^n\\).\n\nDefinition 6 A vector space, denoted \\(\\mathcal{V}\\), refers to a set of vectors which is closed under finite addition and scalar multiplication.\n\n\nDefinition 7 A set of \\(k\\) linearly independent vectors, \\(\\{X_1,X_2,\\dots,X_k\\}\\), forms a basis for vector space \\(\\mathcal{V}\\) if \\(\\forall\\;y\\in\\mathcal{V}\\) there exists a set of \\(k\\) scalars such that, \\[\ny=X_1b_1+X_2b_2+\\ldots+X_kb_k\n\\]\n\nBased on these definitions, it is evident that for the Euclidean space, \\(\\mathbb{E}^n\\), any \\(n\\) linearly independent vectors from \\(\\mathbb{R}^n\\) is a basis. For example, any point in \\(\\mathbb{E}^2\\) can be defined as a multiple of,\n\\[\n\\begin{bmatrix}1\\\\0\\end{bmatrix}\\quad \\text{and} \\quad\\begin{bmatrix}0\\\\1\\end{bmatrix}\n\\]\nConsider again the \\(n\\times k\\) matrix \\(X\\), where \\(k&lt;n\\). Then we define the,\n\nDefinition 8 column space (or span) of \\(X\\), denoted \\(\\mathcal{S}(X)\\), as the vector space generate by the \\(k\\) columns of \\(X\\). Formally, \\[\n\\mathcal{S}(X) = \\{y\\in\\mathbb{R}^n:\\;y=Xb\\quad\\text{for some }b\\in \\mathbb{R}^k\\}\n\\]\n\nA property to note about the span or column space \\(X\\) is,\nResult: \\(\\mathcal{S}(X)=\\mathcal{S}(XX')\\) :::\nwhere \\(XX'\\) is a \\(n\\times n\\) matrix.\nFinally, we can define the,\n\nDefinition 9 orthogonal column space (or orthogonal span) of \\(X\\) as, \\[\n\\mathcal{S}^{\\perp}(X) = \\{y\\in \\mathbb{R}^k:\\;y'x=0\\quad \\forall x\\in\\mathcal{S}(X)\\}\n\\]\n\n\n\n\nConsider a \\(n\\times k\\) matrix \\(X\\), the\n\nDefinition 10 row rank of \\(X\\) is the maximum number of linearly independent rows: \\[\nrowrank(X) \\leq n\n\\]\n\nWe say that matrix \\(X\\) has full row rank if \\(rowrank(X)=n\\).\nThe,\n\nDefinition 11 column rank of \\(X\\) is the maximum number of linearly independent columns:\n\\[\ncolrank(X) \\leq k\n\\]\n\nWe say that matrix \\(X\\) has full column rank if \\(colrank(X)=k\\).\nAn important result is,\n\nResult: the rank of \\(X\\): \\[\nr(X) = rowrank(X)=colrank(X) \\\\\n\\Rightarrow r(X)\\leq min\\{n,k\\}\n\\]\n\nIn addition, since the \\(r(X)\\) depends on the number of linearly independent columns, we can say that,\n\nResult: the dimension of \\(\\mathcal{S}(X)\\), \\(dim(\\mathcal{S}(X))\\), is given by the \\(r(X)\\).\n\nHere are a few additional results,\n\nResult: \\(r(X)=r(X')\\)\nResult: \\(r(XY)\\leq min\\{r(X),r(Y)\\}\\)\nResult: \\(r(XY)=r(X)\\) if \\(Y\\) is square and full rank\nResult: \\(r(X+Y)\\leq r(X) + r(Y)\\)\n\n\n\n\nConsider the case of a square, \\(n\\times n\\), matrix \\(A\\). We say that,\n\nDefinition 12 \\(A\\) is singular if the \\(r(A)&lt;n\\),\n\nor that,\n\nDefinition 13 \\(A\\) is non-singular if the \\(r(A)=n\\).\n\nThe singularity of a square matrix is important as it determines the invertibility of a matrix, which typically relates the existence of a unique solution in systems of linear equations. Here are a few key results,\n\nResult: There exists a matrix \\(B=A^{-1}\\), such that \\(AB=I_n\\) (where \\(I_n\\) is the identity matrix), if and only if \\(A\\) is non-singular.\nResult: \\(A\\) is non-singular if and only if the determinant of \\(A\\) is non-zero: \\(det(A)\\neq0\\).1\nResult: Likewise, \\(A\\) is singular if and only if \\(det(A)=0\\).\nResult: \\(AA^{-1}=A^{-1}A=I\\)\nResult: \\((A')^{-1}=(A^{-1})'\\)\nResult: If their respective inverses exist, then \\((AB)^{-1}=B^{-1}A^{-1}\\).\nResult: \\(det(AB)=det(A)det(B)\\)\nResult: \\(det(A^{-1})=det(A)^{-1}\\)\n\nFor any square matrix \\(A\\),\n\nDefinition 14 the trace of \\(A\\) is the sum of all diagonal elements: \\[\ntr(A) = \\sum_{i=1}^na_{ii}\n\\]\n\nRegarding the trace of a square matrix, here are a few important results:\n\nResult: \\(tr(A+B) = tr(A) + tr(B)\\)\nResult: \\(tr(\\lambda A) = \\lambda tr(A)\\) where \\(\\lambda\\) is a scalar\nResult: \\(tr(A) = tr(A')\\)\nResult: \\(tr(AB) = tr(BA)\\) where \\(AB\\) and \\(BA\\) are both square, but need not be of the same order.\nResult: \\(||A|| = (tr(A'A))^{1/2}\\)\n\n\n\n\nA symmetric matrix has the property that \\(A=A'\\). Therefore, \\(A\\) must be square.\nHere are a few important results concerning symmetric matrices.\n\nResult: \\(A^{-1}\\) exists if \\(det(A)\\neq 0\\) and \\(r(A)=n\\)\nResult: A is diagonalizable.2\nResult: The eigenvector decomposition of a square matrix gives you \\(A=C\\Lambda C^{-1}\\) where \\(\\Lambda\\) is a diagonal matrix of eigenvalues and $C$ a matrix of the corresponding eigenvectors. The symmetry of \\(A\\) gives you that \\(C^{-1}=C'\\Rightarrow A=C\\Lambda C'\\) with \\(C'C=CC'=I_{n}\\).3\n\nA key definition concerning symmetric matrices is their positive definiteness:\n\nDefinition 15 \\(A\\) is positive semi-definite if for any \\(x\\in\\mathbb{R}^n,\\;x'Ax\\geq0\\).\n\nGiven the eigenvector decomposition of a symmetric matrix, positive semi-definiteness implies \\(\\Lambda\\) is positive semi-definite: \\(\\lambda_i\\geq0\\quad\\forall i\\). Likewise,\n\nDefinition 16 \\(A\\) is positive definite if for any \\(x\\in\\mathbb{R}^n,\\;x'Ax&gt;0\\).\n\nAgain, based on the egeinvector decomposition, positive semi-definiteness implies \\(\\Lambda\\) is positive definite: \\(\\lambda_i&gt;0\\quad\\forall i\\).\nA few more results are:\n\nResult: \\(tr(A) = \\sum_{i=1}^n\\lambda_i\\)\nResult: \\(r(A) = r(\\Lambda)\\)\nResult: \\(det(A) = \\prod_{i=1}^n \\lambda_i\\)\n\nThis last result can be used to prove that any positive definite matrix is non-singular and therefore has an inverse.\nAny full-rank, positive semi-definite, symmetric matrix \\(B\\) has the additional properties:\n\nResult: \\(B=C\\Lambda C'\\) and \\(B^{-1} = C\\Lambda^{-1}C'\\)\nResult: We can define the square-root of \\(B\\) as \\(B^{1/2} = C\\Lambda^{1/2}C'\\). Similarly, \\(B^{-1/2} = C\\Lambda^{-1/2}C'\\).\n\n\n\n\nAn idempotent matrix has the property that \\(D=DD\\). Therefore, \\(D\\) must be square.\nHere are a few important results concerning idempotent matrices.\n\nResult: \\(D\\) is positive definite\nResult: \\(D\\) is diagonalizable\nResult: \\((I_n-D)\\) is also an idempotent matrix\nResult: With the exception of \\(I_n\\), all idempotent matrices are singular.\nResult: \\(r(D) = tr(D) = \\sum_{i=1}^n\\lambda_i\\)\nResult: \\(\\lambda_i\\in\\{0,1\\}\\quad \\forall\\;i\\)\n\nProjection matrices are idempotent, but need not be symmetric. However, for the purposes of this module we will deal exclusively with symmetric idempotent projection matrices.\n\n\n\nHere we will look at the derivatives of scalar with respect to (W.r.t.) a vector. You can also define other derivatives, such as the derivative of a vector w.r.t. a vector and the derivative of a scalar with respect to a matrix. However, these are not needed for these notes.\n\n\nSuppose \\(f(x)\\in R\\) (i.e. a scalar) and \\(x\\in R^n\\) (i.e. a \\(n\\times 1\\) vector). Then we can define the partial derivative of \\(f(x)\\) w.r.t. \\(x\\) as,\n\\[\n  \\frac{\\partial f(x)}{\\partial x}  = \\begin{bmatrix}\\frac{\\partial f(x)}{\\partial x_1} \\\\ \\frac{\\partial f(x)}{\\partial x_2} \\\\ \\vdots \\\\ \\frac{\\partial f(x)}{\\partial x_n} \\end{bmatrix}\n\\]\n\n\n\nA special case is when \\(f(x)\\) is linear in \\(x\\),\n\\[\nf(x) = a'x = \\sum_{i=1}^n a_ix_i\n\\] for \\(a\\in R^n\\). The derivative of \\(a'x\\) with respect to the vector \\(x\\) can be defined as,\n\\[\n  \\begin{aligned}\n  \\frac{\\partial a'x}{\\partial x} & = \\begin{bmatrix}\\frac{\\partial a'x}{\\partial x_1} \\\\ \\frac{\\partial a'x}{\\partial x_2} \\\\ \\vdots \\\\ \\frac{\\partial a'x}{\\partial x_n} \\end{bmatrix} \\\\\n  & = \\begin{bmatrix}a_1 \\\\ a_2 \\\\ \\vdots \\\\ a_n \\end{bmatrix} \\\\\n  & = a\n  \\end{aligned}\n\\] since the the partial derivate of \\(a'x = \\sum_{i=1}^n a_ix_i\\) w.r.t. \\(x_i\\) is just the scalar \\(a_i\\).\nThe derivative of a scalar w.r.t. to a vector yields a vector of partial derivatives.\nSince \\(a'x\\) is a scalar, it is by definition symmetric: \\(a'x = x'a\\). Thus,\n\\[\n\\frac{\\partial x'a}{\\partial x} = \\frac{\\partial a'x}{\\partial x} = a\n\\]\n\n\n\nSuppose \\(f(x)\\) is a linear transformation of \\(x\\),\n\\[\nf(x) = A'x\n\\] for any \\(m\\times n\\) matrix A,\n\\[\n  A = \\begin{bmatrix}a_1' \\\\ a_2' \\\\ \\vdots \\\\ a_m'\\end{bmatrix}\n\\] where \\(a_i\\in R^n\\;\\forall i=1,\\dots,m\\) and,\n\\[\n  Ax = \\begin{bmatrix}a_1'x \\\\ a_2'x \\\\ \\vdots \\\\ a_m'x\\end{bmatrix}\n\\] Note, \\(f(x)=Ax\\in R^m\\), a \\(m\\times 1\\) vector. We can then define,\n\\[\n  \\begin{aligned}\n  \\frac{\\partial Ax}{\\partial x'} & = \\begin{bmatrix}\\frac{\\partial a_1'x}{\\partial x_1} & \\frac{\\partial a_1'x}{\\partial x_2} & \\dots & \\frac{\\partial a_1'x}{\\partial x_n}\\\\ \\frac{\\partial a_2'x}{\\partial x_1} & \\frac{\\partial a_2'x}{\\partial x_2} & \\dots & \\frac{\\partial a_2'x}{\\partial x_n}\\\\ \\vdots & \\vdots & \\ddots & \\vdots\\\\ \\frac{\\partial a_m'x}{\\partial x_1} & \\frac{\\partial a_m'x}{\\partial x_2} & \\dots & \\frac{\\partial a_m'x}{\\partial x_n}\\\\ \\end{bmatrix} \\\\\n  & = \\begin{bmatrix} a_{11} & a_{12} & \\dots & a_{1n} \\\\ a_{21} & a_{22} & \\dots & a_{2n} \\\\ \\vdots & \\vdots & \\ddots & \\vdots\\\\ a_{m1} & a_{m2} & \\dots & a_{mn} \\\\ \\end{bmatrix} \\\\\n  & = A\n  \\end{aligned}\n\\]\nSince Ax is \\(m\\times 1\\) column vector, we take the derivative w.r.t. \\(x'\\) a row vector and not the column vector \\(x\\). This results in a matrix of partial derivatives.\n\n\n\nA second special case is where the function takes on the quadaratic form,\n\\[\nf(x) = x'Ax = \\sum_{i=1}^N\\sum_{j=1}^n a_{ij}x_ix_j\n\\]\nfor \\(n\\times n\\) (square) matrix A. As in the first linear case, \\(f(x)\\) is scalar.\nDefine \\(c = Ax\\), the \\(x'Ax = x'c\\). From the linear case, we know that,\n\\[\n\\frac{\\partial x'c}{\\partial x} = c\n\\]\nSimilarly, if we define \\(d = A'x\\) then \\(x'Ax = d'x\\). From the linear case, we know that,\n\\[\n\\frac{\\partial d'x}{\\partial x} = d\n\\]\nWe can define the total derivative as the sum of the partial derivatives w.r.t. to the first and second \\(x\\). Combining these two results, we have that,\n\\[\n\\frac{\\partial x'Ax}{\\partial x} = Ax + A'x\n\\]\nAnd if \\(A\\) is symmetric, this result simplifies to \\(2Ax\\)."
  },
  {
    "objectID": "material-linearalgebra.html#linear-dependence",
    "href": "material-linearalgebra.html#linear-dependence",
    "title": "Linear Algebra",
    "section": "",
    "text": "Consider a set of \\(k\\) \\(n\\)-dimensional vectors \\(\\{X_{1},X_{2},...,X_{k}\\}\\). These vectors are,\n\nDefinition 1 linearly dependent if there exists a set of scalars \\(\\{a_{1},a_{2},\\dots,a_{k}\\}\\) such that\n\\[\na_1X_1 + a_2X_2+\\ldots+a_kX_k=0\n\\]\nwhere at least one \\(a_i\\neq0\\).\n\nAlternatively, they are,\n\nDefinition 2 linearly independent if the only set of scalars \\(\\{a_{1},a_{2},\\dots,a_{k}\\}\\) that satisfies the above condition is \\(a_1,a_2,\\dots,a_k=0\\).\n\nIf we collect these \\(k\\) column-vectors in a matrix, \\(X=[X_1\\;X_2 \\dots X_k]\\), then the linear dependence condition can be written as,\n\\[\na_1X_1 + a_2X_2+\\ldots+a_kX_k=\\begin{bmatrix} X_1\\;X_2 \\dots X_k\\end{bmatrix}\\begin{bmatrix}a_1\\\\a_2\\\\\\vdots\\\\a_k\\end{bmatrix}=Xa = 0\n\\]\nGiven any \\(n\\times k\\) matrix \\(X\\), its columns are,\n\nDefinition 3 linearly dependent if there exists a vector \\(a\\in\\mathbb{R}^k\\) such that \\(a\\neq0\\) and \\(Xa=0\\);\n\nor,\n\nDefinition 4 linearly independent if the only vector \\(a\\in\\mathbb{R}^k\\) such that \\(Xa=0\\) is \\(a=0\\).\n\nFor any matrix there may be more than one vector \\(a\\in\\mathbb{R}^{k}\\) such that \\(Xa=0\\). Indeed, if both \\(a_{1},a_{2}\\in\\mathbb{R}^{k}\\)\nsatisfy this condition and \\(a_{1}\\neq a_{2}\\) then you can show that any linear combination of \\(\\{a_{1},a_{2}\\}\\) satisfies the\ncondition \\(X(a_{1}b_{1}+a_{2}b_{2})=0\\) for \\(b_{1},b_{2}\\in\\mathbb{R}\\). Thus, there exists an entire set of vectors which satisfy this condition. This set is referred to as the,\n\nDefinition 5 null space of \\(X\\), \\[\n\\mathcal{N}(X) = \\{a\\in\\mathbb{R}^k:\\;Xa=0\\}\n\\]\n\nIt should be evident from the definition that if the columns of \\(X\\) are linearly independent then \\(\\mathcal{N}(X)=\\{0\\}\\), a singleton. That is, it just includes the 0-vector."
  },
  {
    "objectID": "material-linearalgebra.html#vector-spaces-bases-and-spans",
    "href": "material-linearalgebra.html#vector-spaces-bases-and-spans",
    "title": "Linear Algebra",
    "section": "",
    "text": "Here, we concern ourselves only with real vectors from \\(\\mathbb{R}^n\\).\n\nDefinition 6 A vector space, denoted \\(\\mathcal{V}\\), refers to a set of vectors which is closed under finite addition and scalar multiplication.\n\n\nDefinition 7 A set of \\(k\\) linearly independent vectors, \\(\\{X_1,X_2,\\dots,X_k\\}\\), forms a basis for vector space \\(\\mathcal{V}\\) if \\(\\forall\\;y\\in\\mathcal{V}\\) there exists a set of \\(k\\) scalars such that, \\[\ny=X_1b_1+X_2b_2+\\ldots+X_kb_k\n\\]\n\nBased on these definitions, it is evident that for the Euclidean space, \\(\\mathbb{E}^n\\), any \\(n\\) linearly independent vectors from \\(\\mathbb{R}^n\\) is a basis. For example, any point in \\(\\mathbb{E}^2\\) can be defined as a multiple of,\n\\[\n\\begin{bmatrix}1\\\\0\\end{bmatrix}\\quad \\text{and} \\quad\\begin{bmatrix}0\\\\1\\end{bmatrix}\n\\]\nConsider again the \\(n\\times k\\) matrix \\(X\\), where \\(k&lt;n\\). Then we define the,\n\nDefinition 8 column space (or span) of \\(X\\), denoted \\(\\mathcal{S}(X)\\), as the vector space generate by the \\(k\\) columns of \\(X\\). Formally, \\[\n\\mathcal{S}(X) = \\{y\\in\\mathbb{R}^n:\\;y=Xb\\quad\\text{for some }b\\in \\mathbb{R}^k\\}\n\\]\n\nA property to note about the span or column space \\(X\\) is,\nResult: \\(\\mathcal{S}(X)=\\mathcal{S}(XX')\\) :::\nwhere \\(XX'\\) is a \\(n\\times n\\) matrix.\nFinally, we can define the,\n\nDefinition 9 orthogonal column space (or orthogonal span) of \\(X\\) as, \\[\n\\mathcal{S}^{\\perp}(X) = \\{y\\in \\mathbb{R}^k:\\;y'x=0\\quad \\forall x\\in\\mathcal{S}(X)\\}\n\\]"
  },
  {
    "objectID": "material-linearalgebra.html#rank",
    "href": "material-linearalgebra.html#rank",
    "title": "Linear Algebra",
    "section": "",
    "text": "Consider a \\(n\\times k\\) matrix \\(X\\), the\n\nDefinition 10 row rank of \\(X\\) is the maximum number of linearly independent rows: \\[\nrowrank(X) \\leq n\n\\]\n\nWe say that matrix \\(X\\) has full row rank if \\(rowrank(X)=n\\).\nThe,\n\nDefinition 11 column rank of \\(X\\) is the maximum number of linearly independent columns:\n\\[\ncolrank(X) \\leq k\n\\]\n\nWe say that matrix \\(X\\) has full column rank if \\(colrank(X)=k\\).\nAn important result is,\n\nResult: the rank of \\(X\\): \\[\nr(X) = rowrank(X)=colrank(X) \\\\\n\\Rightarrow r(X)\\leq min\\{n,k\\}\n\\]\n\nIn addition, since the \\(r(X)\\) depends on the number of linearly independent columns, we can say that,\n\nResult: the dimension of \\(\\mathcal{S}(X)\\), \\(dim(\\mathcal{S}(X))\\), is given by the \\(r(X)\\).\n\nHere are a few additional results,\n\nResult: \\(r(X)=r(X')\\)\nResult: \\(r(XY)\\leq min\\{r(X),r(Y)\\}\\)\nResult: \\(r(XY)=r(X)\\) if \\(Y\\) is square and full rank\nResult: \\(r(X+Y)\\leq r(X) + r(Y)\\)"
  },
  {
    "objectID": "material-linearalgebra.html#properties-of-square-matrices",
    "href": "material-linearalgebra.html#properties-of-square-matrices",
    "title": "Linear Algebra",
    "section": "",
    "text": "Consider the case of a square, \\(n\\times n\\), matrix \\(A\\). We say that,\n\nDefinition 12 \\(A\\) is singular if the \\(r(A)&lt;n\\),\n\nor that,\n\nDefinition 13 \\(A\\) is non-singular if the \\(r(A)=n\\).\n\nThe singularity of a square matrix is important as it determines the invertibility of a matrix, which typically relates the existence of a unique solution in systems of linear equations. Here are a few key results,\n\nResult: There exists a matrix \\(B=A^{-1}\\), such that \\(AB=I_n\\) (where \\(I_n\\) is the identity matrix), if and only if \\(A\\) is non-singular.\nResult: \\(A\\) is non-singular if and only if the determinant of \\(A\\) is non-zero: \\(det(A)\\neq0\\).1\nResult: Likewise, \\(A\\) is singular if and only if \\(det(A)=0\\).\nResult: \\(AA^{-1}=A^{-1}A=I\\)\nResult: \\((A')^{-1}=(A^{-1})'\\)\nResult: If their respective inverses exist, then \\((AB)^{-1}=B^{-1}A^{-1}\\).\nResult: \\(det(AB)=det(A)det(B)\\)\nResult: \\(det(A^{-1})=det(A)^{-1}\\)\n\nFor any square matrix \\(A\\),\n\nDefinition 14 the trace of \\(A\\) is the sum of all diagonal elements: \\[\ntr(A) = \\sum_{i=1}^na_{ii}\n\\]\n\nRegarding the trace of a square matrix, here are a few important results:\n\nResult: \\(tr(A+B) = tr(A) + tr(B)\\)\nResult: \\(tr(\\lambda A) = \\lambda tr(A)\\) where \\(\\lambda\\) is a scalar\nResult: \\(tr(A) = tr(A')\\)\nResult: \\(tr(AB) = tr(BA)\\) where \\(AB\\) and \\(BA\\) are both square, but need not be of the same order.\nResult: \\(||A|| = (tr(A'A))^{1/2}\\)"
  },
  {
    "objectID": "material-linearalgebra.html#properties-of-symmetric-matrices",
    "href": "material-linearalgebra.html#properties-of-symmetric-matrices",
    "title": "Linear Algebra",
    "section": "",
    "text": "A symmetric matrix has the property that \\(A=A'\\). Therefore, \\(A\\) must be square.\nHere are a few important results concerning symmetric matrices.\n\nResult: \\(A^{-1}\\) exists if \\(det(A)\\neq 0\\) and \\(r(A)=n\\)\nResult: A is diagonalizable.2\nResult: The eigenvector decomposition of a square matrix gives you \\(A=C\\Lambda C^{-1}\\) where \\(\\Lambda\\) is a diagonal matrix of eigenvalues and $C$ a matrix of the corresponding eigenvectors. The symmetry of \\(A\\) gives you that \\(C^{-1}=C'\\Rightarrow A=C\\Lambda C'\\) with \\(C'C=CC'=I_{n}\\).3\n\nA key definition concerning symmetric matrices is their positive definiteness:\n\nDefinition 15 \\(A\\) is positive semi-definite if for any \\(x\\in\\mathbb{R}^n,\\;x'Ax\\geq0\\).\n\nGiven the eigenvector decomposition of a symmetric matrix, positive semi-definiteness implies \\(\\Lambda\\) is positive semi-definite: \\(\\lambda_i\\geq0\\quad\\forall i\\). Likewise,\n\nDefinition 16 \\(A\\) is positive definite if for any \\(x\\in\\mathbb{R}^n,\\;x'Ax&gt;0\\).\n\nAgain, based on the egeinvector decomposition, positive semi-definiteness implies \\(\\Lambda\\) is positive definite: \\(\\lambda_i&gt;0\\quad\\forall i\\).\nA few more results are:\n\nResult: \\(tr(A) = \\sum_{i=1}^n\\lambda_i\\)\nResult: \\(r(A) = r(\\Lambda)\\)\nResult: \\(det(A) = \\prod_{i=1}^n \\lambda_i\\)\n\nThis last result can be used to prove that any positive definite matrix is non-singular and therefore has an inverse.\nAny full-rank, positive semi-definite, symmetric matrix \\(B\\) has the additional properties:\n\nResult: \\(B=C\\Lambda C'\\) and \\(B^{-1} = C\\Lambda^{-1}C'\\)\nResult: We can define the square-root of \\(B\\) as \\(B^{1/2} = C\\Lambda^{1/2}C'\\). Similarly, \\(B^{-1/2} = C\\Lambda^{-1/2}C'\\)."
  },
  {
    "objectID": "material-linearalgebra.html#properties-of-idempotent-matrices",
    "href": "material-linearalgebra.html#properties-of-idempotent-matrices",
    "title": "Linear Algebra",
    "section": "",
    "text": "An idempotent matrix has the property that \\(D=DD\\). Therefore, \\(D\\) must be square.\nHere are a few important results concerning idempotent matrices.\n\nResult: \\(D\\) is positive definite\nResult: \\(D\\) is diagonalizable\nResult: \\((I_n-D)\\) is also an idempotent matrix\nResult: With the exception of \\(I_n\\), all idempotent matrices are singular.\nResult: \\(r(D) = tr(D) = \\sum_{i=1}^n\\lambda_i\\)\nResult: \\(\\lambda_i\\in\\{0,1\\}\\quad \\forall\\;i\\)\n\nProjection matrices are idempotent, but need not be symmetric. However, for the purposes of this module we will deal exclusively with symmetric idempotent projection matrices."
  },
  {
    "objectID": "material-linearalgebra.html#vector-differentiation",
    "href": "material-linearalgebra.html#vector-differentiation",
    "title": "Linear Algebra",
    "section": "",
    "text": "Here we will look at the derivatives of scalar with respect to (W.r.t.) a vector. You can also define other derivatives, such as the derivative of a vector w.r.t. a vector and the derivative of a scalar with respect to a matrix. However, these are not needed for these notes.\n\n\nSuppose \\(f(x)\\in R\\) (i.e. a scalar) and \\(x\\in R^n\\) (i.e. a \\(n\\times 1\\) vector). Then we can define the partial derivative of \\(f(x)\\) w.r.t. \\(x\\) as,\n\\[\n  \\frac{\\partial f(x)}{\\partial x}  = \\begin{bmatrix}\\frac{\\partial f(x)}{\\partial x_1} \\\\ \\frac{\\partial f(x)}{\\partial x_2} \\\\ \\vdots \\\\ \\frac{\\partial f(x)}{\\partial x_n} \\end{bmatrix}\n\\]\n\n\n\nA special case is when \\(f(x)\\) is linear in \\(x\\),\n\\[\nf(x) = a'x = \\sum_{i=1}^n a_ix_i\n\\] for \\(a\\in R^n\\). The derivative of \\(a'x\\) with respect to the vector \\(x\\) can be defined as,\n\\[\n  \\begin{aligned}\n  \\frac{\\partial a'x}{\\partial x} & = \\begin{bmatrix}\\frac{\\partial a'x}{\\partial x_1} \\\\ \\frac{\\partial a'x}{\\partial x_2} \\\\ \\vdots \\\\ \\frac{\\partial a'x}{\\partial x_n} \\end{bmatrix} \\\\\n  & = \\begin{bmatrix}a_1 \\\\ a_2 \\\\ \\vdots \\\\ a_n \\end{bmatrix} \\\\\n  & = a\n  \\end{aligned}\n\\] since the the partial derivate of \\(a'x = \\sum_{i=1}^n a_ix_i\\) w.r.t. \\(x_i\\) is just the scalar \\(a_i\\).\nThe derivative of a scalar w.r.t. to a vector yields a vector of partial derivatives.\nSince \\(a'x\\) is a scalar, it is by definition symmetric: \\(a'x = x'a\\). Thus,\n\\[\n\\frac{\\partial x'a}{\\partial x} = \\frac{\\partial a'x}{\\partial x} = a\n\\]\n\n\n\nSuppose \\(f(x)\\) is a linear transformation of \\(x\\),\n\\[\nf(x) = A'x\n\\] for any \\(m\\times n\\) matrix A,\n\\[\n  A = \\begin{bmatrix}a_1' \\\\ a_2' \\\\ \\vdots \\\\ a_m'\\end{bmatrix}\n\\] where \\(a_i\\in R^n\\;\\forall i=1,\\dots,m\\) and,\n\\[\n  Ax = \\begin{bmatrix}a_1'x \\\\ a_2'x \\\\ \\vdots \\\\ a_m'x\\end{bmatrix}\n\\] Note, \\(f(x)=Ax\\in R^m\\), a \\(m\\times 1\\) vector. We can then define,\n\\[\n  \\begin{aligned}\n  \\frac{\\partial Ax}{\\partial x'} & = \\begin{bmatrix}\\frac{\\partial a_1'x}{\\partial x_1} & \\frac{\\partial a_1'x}{\\partial x_2} & \\dots & \\frac{\\partial a_1'x}{\\partial x_n}\\\\ \\frac{\\partial a_2'x}{\\partial x_1} & \\frac{\\partial a_2'x}{\\partial x_2} & \\dots & \\frac{\\partial a_2'x}{\\partial x_n}\\\\ \\vdots & \\vdots & \\ddots & \\vdots\\\\ \\frac{\\partial a_m'x}{\\partial x_1} & \\frac{\\partial a_m'x}{\\partial x_2} & \\dots & \\frac{\\partial a_m'x}{\\partial x_n}\\\\ \\end{bmatrix} \\\\\n  & = \\begin{bmatrix} a_{11} & a_{12} & \\dots & a_{1n} \\\\ a_{21} & a_{22} & \\dots & a_{2n} \\\\ \\vdots & \\vdots & \\ddots & \\vdots\\\\ a_{m1} & a_{m2} & \\dots & a_{mn} \\\\ \\end{bmatrix} \\\\\n  & = A\n  \\end{aligned}\n\\]\nSince Ax is \\(m\\times 1\\) column vector, we take the derivative w.r.t. \\(x'\\) a row vector and not the column vector \\(x\\). This results in a matrix of partial derivatives.\n\n\n\nA second special case is where the function takes on the quadaratic form,\n\\[\nf(x) = x'Ax = \\sum_{i=1}^N\\sum_{j=1}^n a_{ij}x_ix_j\n\\]\nfor \\(n\\times n\\) (square) matrix A. As in the first linear case, \\(f(x)\\) is scalar.\nDefine \\(c = Ax\\), the \\(x'Ax = x'c\\). From the linear case, we know that,\n\\[\n\\frac{\\partial x'c}{\\partial x} = c\n\\]\nSimilarly, if we define \\(d = A'x\\) then \\(x'Ax = d'x\\). From the linear case, we know that,\n\\[\n\\frac{\\partial d'x}{\\partial x} = d\n\\]\nWe can define the total derivative as the sum of the partial derivatives w.r.t. to the first and second \\(x\\). Combining these two results, we have that,\n\\[\n\\frac{\\partial x'Ax}{\\partial x} = Ax + A'x\n\\]\nAnd if \\(A\\) is symmetric, this result simplifies to \\(2Ax\\)."
  },
  {
    "objectID": "material-linearalgebra.html#footnotes",
    "href": "material-linearalgebra.html#footnotes",
    "title": "Linear Algebra",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nThese notes do not cover how to calculate the determinant of a square matrix. You should be able to find a definition easily online.↩︎\nA matrix is diagonalizable if it is similar to some other diagonal matrix. Matrices \\(B\\) and \\(C\\) are similar if \\(C=PBP^{-1}\\). A square matrix which is not diagonalizable is defective. This property relates closely to eigenvector decomposition.↩︎\nRecall, an eigenvalue and eigenvector pair, \\((\\lambda,c)\\), of matrix \\(A\\) satisfy:\n\\[\nAc = \\lambda c\\Rightarrow (A-\\lambda I_n)c=0\n\\]↩︎"
  }
]